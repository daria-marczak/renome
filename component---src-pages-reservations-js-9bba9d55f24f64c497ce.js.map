{"version":3,"sources":["webpack:///./src/components/reservations/Online.js","webpack:///./src/components/reservations/phrases.js","webpack:///./src/components/reservations/ReservationForm.js","webpack:///./src/components/reservations/logic/reservationActions.js","webpack:///./src/pages/reservations.js","webpack:///./src/templates/HomeTemplate.js","webpack:///./src/components/common/Loader.js","webpack:///./src/components/common/PhotoComponent.js"],"names":["Online","_ref","edges","data","allFile","firstPhoto","secondPhoto","react_default","a","createElement","common","title","PhotoComponent","node","switched","left","isDescription","propTypes","PropTypes","shape","isRequired","reservations_Online","props","gatsby_browser_entry","query","render","Online_Online","Object","assign","_2983914212","jumpToPrevMonth","jumpToNextMonth","pageUpPageDown","homeEnd","selectFocusedDate","moveFocusByOneDay","moveFocusByOneWeek","returnFocusToInput","keyboardNavigationInstructions","chooseAvailableDate","_ref3","date","dateIsUnavailable","_ref4","dateIsSelected","_ref5","SingleDatePickerPhrases","calendarLabel","closeDatePicker","clearDate","keyboardShortcuts","showKeyboardShortcutsPanel","hideKeyboardShortcutsPanel","openThisPanel","enterKey","leftArrowRightArrow","upArrowDownArrow","escape","questionMark","moveFocusByOneMonth","moveFocustoStartAndEndOfWeek","StyledHeading","styled","h3","withConfig","displayName","componentId","StyledReservationWrapper","StyledWrapper","StyledForm","form","theme","font","family","montserrat","StyledFormWrapper","div","StyledImage","Img","StyledInput","input","_ref2","lightGray","StyleDates","SingleDatePicker","StyledLabel","label","ReservationForm","_ref6","isFetching","addReservation","today","moment","add","now","Date","getHours","getMinutes","_useState","useState","setDate","_useState2","time","setTime","_useState3","people","setPeopleAmount","_useState4","isFocused","setFocus","onSubmit","event","preventDefault","onDateChange","focused","onFocusChange","id","noBorder","small","numberOfMonths","phrases","screenReaderInputMessage","customInputIcon","fluid","calendar","childImageSharp","htmlFor","aria-label","hours","type","name","min","aria-valuemin","max","aria-valuemax","value","onChange","target","required","isSuccess","disabled","Loader","bool","func","reservations_ReservationForm","ReservationForm_ReservationForm","_630237682","reservationActions","INVOKE","__webpack_require__","d","__webpack_exports__","Reservations","HomeTemplate","seo","keywords","Header","photo","reservationsHeader","section","Footer","connect","state","reservation","fetching","fetchingReservation","dispatch","bindActionCreators","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","redux__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","styled_components__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","_components_common_Snackbar__WEBPACK_IMPORTED_MODULE_6__","_assets_styles_GlobalStyles__WEBPACK_IMPORTED_MODULE_7__","_assets_styles_theme__WEBPACK_IMPORTED_MODULE_8__","_appLogic_appActions__WEBPACK_IMPORTED_MODULE_9__","children","message","kind","closeMessage","isSnackBarActive","Fragment","isActive","oneOfType","arrayOf","string","appData","content","appActions","StyledLoader","white","primary","role","aria-live","StyledImageFirst","flipped","StyledImageSecond","react__WEBPACK_IMPORTED_MODULE_1___default","alt","defaultProps"],"mappings":"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","file":"component---src-pages-reservations-js-9bba9d55f24f64c497ce.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\n\r\nimport PhotoComponent from '../common/PhotoComponent';\r\nimport {\r\n  StyledHeading,\r\n  StyledDescription,\r\n  StyledParagraph,\r\n  StyledSection,\r\n  StyledWrapper,\r\n  StyledColumn,\r\n} from '../common/common';\r\n\r\nconst Online = ({\r\n  data: {\r\n    allFile: { edges },\r\n  },\r\n}) => {\r\n  const [firstPhoto, secondPhoto] = edges;\r\n\r\n  return (\r\n    <StyledSection title=\"reservation\">\r\n      <StyledWrapper>\r\n        <StyledColumn>\r\n          <PhotoComponent\r\n            firstPhoto={firstPhoto.node}\r\n            secondPhoto={secondPhoto.node}\r\n            switched\r\n            left\r\n          />\r\n        </StyledColumn>\r\n        <StyledColumn isDescription>\r\n          <StyledHeading>online</StyledHeading>\r\n          <StyledDescription>\r\n            {`booking, it's easy as an apple pie`}\r\n          </StyledDescription>\r\n          <StyledParagraph>\r\n            When you finalize a reservation with OpenTable they will send you a\r\n            confirmation email immediately. We will also call you on the date of\r\n            your reservation to confirm your table. If you do not receive an\r\n            email, or do not hear from the restaurant, we would recommend\r\n            calling to confirm your table and verify your reservation booking\r\n            (+1 939 777 55 33).\r\n          </StyledParagraph>\r\n        </StyledColumn>\r\n      </StyledWrapper>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nOnline.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allFile(filter: { absolutePath: { regex: \"/reservation/\" } }) {\r\n          edges {\r\n            node {\r\n              id\r\n              name\r\n              childImageSharp {\r\n                fluid(quality: 100) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Online data={data} {...props} />}\r\n  />\r\n);\r\n","const calendarLabel = 'Calendar';\r\nconst closeDatePicker = 'Close';\r\nconst focusStartDate =\r\n  'Interact with the calendar and add the check-in date for your trip.';\r\nconst clearDate = 'Clear Date';\r\nconst clearDates = 'Clear Dates';\r\nconst jumpToPrevMonth = 'Move backward to switch to the previous month.';\r\nconst jumpToNextMonth = 'Move forward to switch to the next month.';\r\nconst keyboardShortcuts = 'Keyboard Shortcuts';\r\nconst showKeyboardShortcutsPanel = 'Open the keyboard shortcuts panel.';\r\nconst hideKeyboardShortcutsPanel = 'Close the shortcuts panel.';\r\nconst openThisPanel = 'Open this panel.';\r\nconst enterKey = 'Enter key';\r\nconst leftArrowRightArrow = 'Right and left arrow keys';\r\nconst upArrowDownArrow = 'up and down arrow keys';\r\nconst pageUpPageDown = 'page up and page down keys';\r\nconst homeEnd = 'Home and end keys';\r\nconst escape = 'Escape key';\r\nconst questionMark = 'Question mark';\r\nconst selectFocusedDate = 'Select the date in focus.';\r\nconst moveFocusByOneDay =\r\n  'Move backward (left) and forward (right) by one day.';\r\nconst moveFocusByOneWeek = 'Move backward (up) and forward (down) by one week.';\r\nconst moveFocusByOneMonth = 'Switch months.';\r\nconst moveFocustoStartAndEndOfWeek = 'Go to the first or last day of a week.';\r\nconst returnFocusToInput = 'Return to the date input field.';\r\nconst keyboardNavigationInstructions = `Press the down arrow key to interact with the calendar and\r\n  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.`;\r\n\r\nconst chooseAvailableStartDate = ({ date }) =>\r\n  `Choose ${date} as your check-in date. It’s available.`;\r\nconst chooseAvailableEndDate = ({ date }) =>\r\n  `Choose ${date} as your check-out date. It’s available.`;\r\nconst chooseAvailableDate = ({ date }) => date;\r\nconst dateIsUnavailable = ({ date }) => `Not available. ${date}`;\r\nconst dateIsSelected = ({ date }) => `Selected. ${date}`;\r\nconst dateIsSelectedAsStartDate = ({ date }) =>\r\n  `Selected as start date. ${date}`;\r\nconst dateIsSelectedAsEndDate = ({ date }) => `Selected as end date. ${date}`;\r\n\r\nexport default {\r\n  calendarLabel,\r\n  closeDatePicker,\r\n  focusStartDate,\r\n  clearDate,\r\n  clearDates,\r\n  jumpToPrevMonth,\r\n  jumpToNextMonth,\r\n  keyboardShortcuts,\r\n  showKeyboardShortcutsPanel,\r\n  hideKeyboardShortcutsPanel,\r\n  openThisPanel,\r\n  enterKey,\r\n  leftArrowRightArrow,\r\n  upArrowDownArrow,\r\n  pageUpPageDown,\r\n  homeEnd,\r\n  escape,\r\n  questionMark,\r\n  selectFocusedDate,\r\n  moveFocusByOneDay,\r\n  moveFocusByOneWeek,\r\n  moveFocusByOneMonth,\r\n  moveFocustoStartAndEndOfWeek,\r\n  returnFocusToInput,\r\n  keyboardNavigationInstructions,\r\n\r\n  chooseAvailableStartDate,\r\n  chooseAvailableEndDate,\r\n  dateIsUnavailable,\r\n  dateIsSelected,\r\n  dateIsSelectedAsStartDate,\r\n  dateIsSelectedAsEndDate,\r\n};\r\n\r\nexport const DateRangePickerPhrases = {\r\n  calendarLabel,\r\n  closeDatePicker,\r\n  clearDates,\r\n  focusStartDate,\r\n  jumpToPrevMonth,\r\n  jumpToNextMonth,\r\n  keyboardShortcuts,\r\n  showKeyboardShortcutsPanel,\r\n  hideKeyboardShortcutsPanel,\r\n  openThisPanel,\r\n  enterKey,\r\n  leftArrowRightArrow,\r\n  upArrowDownArrow,\r\n  pageUpPageDown,\r\n  homeEnd,\r\n  escape,\r\n  questionMark,\r\n  selectFocusedDate,\r\n  moveFocusByOneDay,\r\n  moveFocusByOneWeek,\r\n  moveFocusByOneMonth,\r\n  moveFocustoStartAndEndOfWeek,\r\n  returnFocusToInput,\r\n  keyboardNavigationInstructions,\r\n  chooseAvailableStartDate,\r\n  chooseAvailableEndDate,\r\n  dateIsUnavailable,\r\n  dateIsSelected,\r\n  dateIsSelectedAsStartDate,\r\n  dateIsSelectedAsEndDate,\r\n};\r\n\r\nexport const DateRangePickerInputPhrases = {\r\n  focusStartDate,\r\n  clearDates,\r\n  keyboardNavigationInstructions,\r\n};\r\n\r\nexport const SingleDatePickerPhrases = {\r\n  calendarLabel,\r\n  closeDatePicker,\r\n  clearDate,\r\n  jumpToPrevMonth,\r\n  jumpToNextMonth,\r\n  keyboardShortcuts,\r\n  showKeyboardShortcutsPanel,\r\n  hideKeyboardShortcutsPanel,\r\n  openThisPanel,\r\n  enterKey,\r\n  leftArrowRightArrow,\r\n  upArrowDownArrow,\r\n  pageUpPageDown,\r\n  homeEnd,\r\n  escape,\r\n  questionMark,\r\n  selectFocusedDate,\r\n  moveFocusByOneDay,\r\n  moveFocusByOneWeek,\r\n  moveFocusByOneMonth,\r\n  moveFocustoStartAndEndOfWeek,\r\n  returnFocusToInput,\r\n  keyboardNavigationInstructions,\r\n  chooseAvailableDate,\r\n  dateIsUnavailable,\r\n  dateIsSelected,\r\n};\r\n\r\nexport const SingleDatePickerInputPhrases = {\r\n  clearDate,\r\n  keyboardNavigationInstructions,\r\n};\r\n\r\nexport const DayPickerPhrases = {\r\n  calendarLabel,\r\n  jumpToPrevMonth,\r\n  jumpToNextMonth,\r\n  keyboardShortcuts,\r\n  showKeyboardShortcutsPanel,\r\n  hideKeyboardShortcutsPanel,\r\n  openThisPanel,\r\n  enterKey,\r\n  leftArrowRightArrow,\r\n  upArrowDownArrow,\r\n  pageUpPageDown,\r\n  homeEnd,\r\n  escape,\r\n  questionMark,\r\n  selectFocusedDate,\r\n  moveFocusByOneDay,\r\n  moveFocusByOneWeek,\r\n  moveFocusByOneMonth,\r\n  moveFocustoStartAndEndOfWeek,\r\n  returnFocusToInput,\r\n  chooseAvailableStartDate,\r\n  chooseAvailableEndDate,\r\n  chooseAvailableDate,\r\n  dateIsUnavailable,\r\n  dateIsSelected,\r\n  dateIsSelectedAsStartDate,\r\n  dateIsSelectedAsEndDate,\r\n};\r\n\r\nexport const DayPickerKeyboardShortcutsPhrases = {\r\n  keyboardShortcuts,\r\n  showKeyboardShortcutsPanel,\r\n  hideKeyboardShortcutsPanel,\r\n  openThisPanel,\r\n  enterKey,\r\n  leftArrowRightArrow,\r\n  upArrowDownArrow,\r\n  pageUpPageDown,\r\n  homeEnd,\r\n  escape,\r\n  questionMark,\r\n  selectFocusedDate,\r\n  moveFocusByOneDay,\r\n  moveFocusByOneWeek,\r\n  moveFocusByOneMonth,\r\n  moveFocustoStartAndEndOfWeek,\r\n  returnFocusToInput,\r\n};\r\n\r\nexport const DayPickerNavigationPhrases = {\r\n  jumpToPrevMonth,\r\n  jumpToNextMonth,\r\n};\r\n\r\nexport const CalendarDayPhrases = {\r\n  chooseAvailableDate,\r\n  dateIsUnavailable,\r\n  dateIsSelected,\r\n  dateIsSelectedAsStartDate,\r\n  dateIsSelectedAsEndDate,\r\n};\r\n","import React, { useState } from 'react';\r\nimport 'react-dates/initialize';\r\nimport moment from 'moment';\r\nimport { SingleDatePicker } from 'react-dates';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport { StyledWrapper, StyledButton } from '../common/common';\r\nimport Loader from '../common/Loader';\r\nimport { SingleDatePickerPhrases } from './phrases';\r\nimport '../../assets/styles/reactDatesOverrides.css';\r\n\r\nconst StyledHeading = styled.h3`\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n  font-size: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledReservationWrapper = styled(StyledWrapper)`\r\n  @media (min-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n\r\n  @media (min-width: 1200px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst StyledFormWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  align-items: center;\r\n\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst StyledImage = styled(Img)`\r\n  width: 21px;\r\n  height: 20px;\r\n\r\n  & > img {\r\n    object-fit: contain !important;\r\n    object-position: 0% 0% !important;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  border: none;\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  padding: 15px 10px;\r\n  border-bottom: 3px solid ${({ theme }) => theme.lightGray};\r\n  margin-left: 10px;\r\n  flex: 1;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyleDates = styled(SingleDatePicker)`\r\n  font-family: ${({ theme }) => theme.font.family.montserrat} !important;\r\n  padding: 15px 10px;\r\n  border-bottom: 3px solid ${({ theme }) => theme.lightGray} !important;\r\n  margin-left: 10px;\r\n  flex: 1;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  @media (min-width: 1200px) {\r\n    width: 200px;\r\n    margin-left: 10px;\r\n\r\n    &:first-of-type {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ReservationForm = ({ data, isFetching, addReservation }) => {\r\n  const today = moment().add(1, 'days');\r\n  const now = `${new Date().getHours()}:${new Date().getMinutes()}`;\r\n\r\n  const [date, setDate] = useState(today);\r\n  const [time, setTime] = useState(now);\r\n  const [people, setPeopleAmount] = useState(0);\r\n  const [isFocused, setFocus] = useState(false);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    addReservation(date, time, people);\r\n  };\r\n\r\n  return (\r\n    <StyledReservationWrapper>\r\n      <StyledHeading>make a reservation</StyledHeading>\r\n      <StyledForm onSubmit={handleSubmit}>\r\n        <StyledFormWrapper>\r\n          <StyleDates\r\n            date={date}\r\n            onDateChange={date => setDate(date)}\r\n            focused={isFocused}\r\n            onFocusChange={() => setFocus(!isFocused)}\r\n            id=\"reservation\"\r\n            noBorder\r\n            small\r\n            numberOfMonths={1}\r\n            phrases={SingleDatePickerPhrases}\r\n            screenReaderInputMessage=\"Select date of your reservation\"\r\n            customInputIcon={\r\n              <StyledImage fluid={data.calendar.childImageSharp.fluid} />\r\n            }\r\n          />\r\n          <StyledLabel\r\n            htmlFor=\"reservationTime\"\r\n            aria-label=\"Select time of your reservation\"\r\n          >\r\n            <StyledImage fluid={data.hours.childImageSharp.fluid} />\r\n            <StyledInput\r\n              type=\"time\"\r\n              id=\"reservationTime\"\r\n              name=\"reservation-time\"\r\n              min=\"9:00\"\r\n              aria-valuemin={9}\r\n              max=\"17:00\"\r\n              aria-valuemax={17}\r\n              value={time}\r\n              aria-label={`Your reservation time is ${time}`}\r\n              onChange={event => setTime(event.target.value)}\r\n              required\r\n            />\r\n          </StyledLabel>\r\n          <StyledLabel\r\n            htmlFor=\"peopleAmount\"\r\n            aria-label=\"Select number of people for your reservation\"\r\n          >\r\n            <StyledImage fluid={data.people.childImageSharp.fluid} />\r\n            <StyledInput\r\n              type=\"number\"\r\n              min=\"1\"\r\n              aria-valuemin={1}\r\n              max=\"10\"\r\n              aria-valuemax={10}\r\n              id=\"peopleAmount\"\r\n              value={people}\r\n              aria-label={`Number of people for the reservation is ${people}`}\r\n              onChange={event => setPeopleAmount(event.target.value)}\r\n              required\r\n            />\r\n          </StyledLabel>\r\n        </StyledFormWrapper>\r\n        <StyledButton type=\"submit\" isSuccess disabled={isFetching}>\r\n          {isFetching && <Loader />}\r\n          {!isFetching && 'Make reservation'}\r\n        </StyledButton>\r\n      </StyledForm>\r\n    </StyledReservationWrapper>\r\n  );\r\n};\r\n\r\nReservationForm.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n  isFetching: PropTypes.bool,\r\n  addReservation: PropTypes.func,\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        calendar: file(name: { regex: \"/calendar/\" }) {\r\n          childImageSharp {\r\n            fluid(quality: 100) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n          }\r\n        }\r\n        people: file(name: { regex: \"/people/\" }) {\r\n          childImageSharp {\r\n            fluid(quality: 100) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n          }\r\n        }\r\n        hours: file(name: { regex: \"/hours/\" }) {\r\n          childImageSharp {\r\n            fluid(quality: 100) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <ReservationForm data={data} {...props} />}\r\n  />\r\n);\r\n","import * as reservationActions from './reservationConstants';\r\n\r\nexport const addReservation = (date, time, people) => ({\r\n  type: reservationActions.ADD_RESERVATION.INVOKE,\r\n  date,\r\n  time,\r\n  people,\r\n});\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport HomeTemplate from '../templates/HomeTemplate';\r\nimport SEO from '../components/seo';\r\nimport Header from '../components/common/Header';\r\nimport Footer from '../components/common/Footer';\r\nimport Online from '../components/reservations/Online';\r\nimport ReservationForm from '../components/reservations/ReservationForm';\r\nimport * as reservationActions from '../components/reservations/logic/reservationActions';\r\n\r\nconst Reservations = ({ data, addReservation, isFetching }) => (\r\n  <HomeTemplate>\r\n    <SEO title=\"Reservations\" keywords={[`renome`, `restaurant`]} />\r\n    <Header\r\n      photo={data.reservationsHeader}\r\n      section=\"reservations\"\r\n      title=\"book a table at our restaurant now!\"\r\n    />\r\n    <Online />\r\n    <ReservationForm addReservation={addReservation} isFetching={isFetching} />\r\n    <Footer />\r\n  </HomeTemplate>\r\n);\r\n\r\nexport const query = graphql`\r\n  query {\r\n    reservationsHeader: file(\r\n      relativePath: { eq: \"images/headers/reservations.png\" }\r\n    ) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 2000, quality: 100) {\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nReservations.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n  isFetching: PropTypes.bool,\r\n  addReservation: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isFetching: state.reservation.fetching.fetchingReservation,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      addReservation: reservationActions.addReservation,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Reservations);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport SEO from '../components/seo';\r\nimport Snackbar from '../components/common/Snackbar';\r\nimport GlobalStyles from '../assets/styles/GlobalStyles';\r\nimport { theme } from '../assets/styles/theme';\r\nimport * as appActions from '../appLogic/appActions';\r\n\r\nconst HomeTemplate = ({\r\n  children,\r\n  message,\r\n  kind,\r\n  closeMessage,\r\n  isSnackBarActive,\r\n}) => (\r\n  <ThemeProvider theme={theme}>\r\n    <>\r\n      <SEO title=\"Home\" keywords={[`renome`, `restaurant`, `food`]} />\r\n      <GlobalStyles />\r\n      <main>{children}</main>\r\n      {isSnackBarActive && (\r\n        <Snackbar\r\n          message={message}\r\n          isActive={isSnackBarActive}\r\n          type={kind}\r\n          closeMessage={closeMessage}\r\n        />\r\n      )}\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n\r\nHomeTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n  message: PropTypes.string,\r\n  kind: PropTypes.string,\r\n  closeMessage: PropTypes.func,\r\n  isSnackBarActive: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  kind: state.appData.message.kind,\r\n  isSnackBarActive: state.appData.isSnackBarActive,\r\n  message: state.appData.message.content,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      closeMessage: appActions.closeMessage,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomeTemplate);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoader = styled.div`\r\n  position: absolute;\r\n  height: 50px;\r\n  width: inherit;\r\n\r\n  &:before {\r\n    animation: rotate 0.9s linear infinite both;\r\n    border: 3px solid ${({ theme }) => theme.white};\r\n    border-bottom-color: ${({ theme }) => theme.primary};\r\n    border-radius: 100%;\r\n    content: '';\r\n    height: 20px;\r\n    top: -20%;\r\n    width: 20px;\r\n    left: 43%;\r\n    position: absolute;\r\n    will-change: transform;\r\n    transform-origin: center;\r\n  }\r\n\r\n  @keyframes rotate {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loader = () => (\r\n  <StyledLoader\r\n    role=\"alert\"\r\n    aria-live=\"assertive\"\r\n    aria-label=\"Content is loading\"\r\n  />\r\n);\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Img from 'gatsby-image';\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: relative;\r\n  z-index: 0;\r\n\r\n  @media (min-width: 1200px) {\r\n    max-width: 450px;\r\n    transform: translateX(${({ left }) => (left ? '100px' : '250px')});\r\n  }\r\n`;\r\n\r\nconst StyledImageFirst = styled(Img)`\r\n  max-width: 272px;\r\n  margin-right: 10px;\r\n  position: 'absolute' !important;\r\n  transform: translateX(${({ switched }) => (switched ? '20%' : '20%')})\r\n    translateY(${({ switched }) => (switched ? '70%' : '0')});\r\n  z-index: ${({ flipped }) => (flipped ? '1' : '0')};\r\n\r\n  @media (min-width: 1200px) {\r\n    max-width: 450px;\r\n  }\r\n`;\r\n\r\nconst StyledImageSecond = styled(Img)`\r\n  max-width: 272px;\r\n  position: relative !important;\r\n  transform: translateY(${({ switched }) => (switched ? '-100%' : '-30%')});\r\n\r\n  @media (min-width: 1200px) {\r\n    max-width: 450px;\r\n  }\r\n`;\r\n\r\nconst PhotoComponent = ({\r\n  firstPhoto,\r\n  secondPhoto,\r\n  flipped,\r\n  switched,\r\n  left,\r\n}) => (\r\n  <StyledWrapper left={left}>\r\n    <StyledImageFirst\r\n      fluid={firstPhoto.childImageSharp.fluid}\r\n      flipped={flipped}\r\n      switched={switched}\r\n      alt={firstPhoto.name}\r\n    />\r\n    <StyledImageSecond\r\n      fluid={secondPhoto.childImageSharp.fluid}\r\n      switched={switched}\r\n      alt={secondPhoto.name}\r\n    />\r\n  </StyledWrapper>\r\n);\r\n\r\nPhotoComponent.propTypes = {\r\n  firstPhoto: PropTypes.shape().isRequired,\r\n  secondPhoto: PropTypes.shape().isRequired,\r\n  flipped: PropTypes.bool,\r\n  switched: PropTypes.bool,\r\n  left: PropTypes.bool,\r\n};\r\n\r\nPhotoComponent.defaultProps = {\r\n  flipped: false,\r\n  switched: false,\r\n};\r\n\r\nexport default PhotoComponent;\r\n"],"sourceRoot":""}