{"version":3,"sources":["webpack:///./src/components/home/About.js","webpack:///./src/components/common/Carousel.js","webpack:///./src/components/common/DesktopCarousel.js","webpack:///./src/components/home/LunchOfDay.js","webpack:///./src/components/home/Menu.js","webpack:///./src/components/home/Quote.js","webpack:///./src/components/home/Reservation.js","webpack:///./src/components/home/Services.js","webpack:///./src/components/home/Blog.js","webpack:///./src/components/home/Contact.js","webpack:///./src/pages/index.js"],"names":["About","_ref","edges","data","allFile","firstPhoto","secondPhoto","react_default","a","createElement","common","title","PhotoComponent","left","node","isDescription","to","propTypes","PropTypes","shape","isRequired","home_About","props","gatsby_browser_entry","query","render","About_About","Object","assign","_189778549","StyledWrapper","styled","div","withConfig","displayName","componentId","StyledButtonsContainer","StyledButton","button","theme","white","StyledPriceTag","_ref2","lightGray","_ref3","font","family","montserrat","StyledDescription","p","_ref4","_ref5","size","carouselDescription","StyledDay","_ref6","playfair","_ref7","jumbotron","_ref8","gray","Carousel","_ref9","_useState","useState","index","setIndex","carouselData","day","dish","price","specificDay","find","name","gatsby_image_default","fluid","childImageSharp","key","id","alt","map","style","backgroundColor","type","onClick","setCarousel","common_Carousel","Carousel_Carousel","_1541887758","StyledImage","Img","StyledContainer","DesktopCarousel","length","changeSlide","isPrev","DesktopCarousel_StyledWrapper","role","DesktopCarousel_StyledButtonsContainer","DesktopCarousel_StyledButton","aria-label","DesktopCarousel_StyledPriceTag","DesktopCarousel_StyledDescription","DesktopCarousel_StyledDay","common_DesktopCarousel","DesktopCarousel_DesktopCarousel","StyledSection","section","StyledCarouselColumn","StyledColumn","Lunch","StyledMenuSection","MenuColumn","StyledSwitched","MenuSection","align","right","flipped","Menu","Menu_MenuSection","_427221827","StyledQuote","StyledAuthor","paragraph","StyledQuoteSection","Quote","Quote_StyledImage","file","home_Quote","Quote_Quote","_1525845480","Reservation","switched","home_Reservation","Reservation_Reservation","_2983914212","StyledAdvantage","StyledLink","StyledSectionLink","StyledServices","Services","service","Services_StyledImage","home_Services","Services_Services","_1337424517","StyledBlogSection","StyledBlogPost","StyledBlogGrid","StyledThreeColumnGrid","StyledTitle","black","StyledDate","StyledBlogWrapper","BlogHome","date","post","Blog_StyledImage","split","join","Blog","Blog_BlogHome","_1192663995","ContactColumn","Contact","Contact_StyledSwitched","home_Contact","Contact_Contact","_2069036367","__webpack_require__","d","__webpack_exports__","IndexPage","HomeTemplate","seo","keywords","Header","photo","homeHeader","LunchOfDay"],"mappings":"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","file":"component---src-pages-index-js-04d0b8213659408237d9.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\n\r\nimport PhotoComponent from '../common/PhotoComponent';\r\nimport {\r\n  StyledHeading,\r\n  StyledDescription,\r\n  StyledParagraph,\r\n  StyledSection,\r\n  StyledSectionLink,\r\n  StyledWrapper,\r\n  StyledColumn,\r\n} from '../common/common';\r\n\r\nconst About = ({\r\n  data: {\r\n    allFile: { edges },\r\n  },\r\n}) => {\r\n  const [firstPhoto, secondPhoto] = edges;\r\n\r\n  return (\r\n    <StyledSection title=\"about\">\r\n      <StyledWrapper>\r\n        <StyledColumn>\r\n          <PhotoComponent\r\n            left\r\n            firstPhoto={firstPhoto.node}\r\n            secondPhoto={secondPhoto.node}\r\n          />\r\n        </StyledColumn>\r\n        <StyledColumn isDescription>\r\n          <StyledHeading>about</StyledHeading>\r\n          <StyledDescription>we create delicious memories</StyledDescription>\r\n          <StyledParagraph>\r\n            Renome it is renowned restaurant delights the senses with elegant\r\n            ambiance, gracious service and delectable menus in the heart of\r\n            Manhattan’s. The distinctive setting boasts contemporary furnishings\r\n            and finishes atop the restaurant’s grand modern architecture. Renome\r\n            offers the room for private dining where guests enjoy creative foods\r\n            and sumptuous late night desserts. Is one of the few Manhattan\r\n            restaurants to have a coveted 3-star Michelin rating.\r\n          </StyledParagraph>\r\n          <StyledSectionLink to=\"/about\">...</StyledSectionLink>\r\n        </StyledColumn>\r\n      </StyledWrapper>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nAbout.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allFile(filter: { absolutePath: { regex: \"/home/\" } }) {\r\n          edges {\r\n            node {\r\n              id\r\n              name\r\n              childImageSharp {\r\n                fluid(quality: 90) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <About data={data} {...props} />}\r\n  />\r\n);\r\n","import React, { useState } from 'react';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Img from 'gatsby-image';\r\n\r\nconst StyledWrapper = styled.div`\r\n  overflow: 'hidden';\r\n  position: relative;\r\n\r\n  @media (min-width: 1200px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StyledButtonsContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 120px;\r\n  left: 34%;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 3px solid ${({ theme }) => theme.white};\r\n  border-radius: 100%;\r\n  margin-left: 4px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledPriceTag = styled.div`\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 20px;\r\n  background-color: ${({ theme }) => theme.lightGray};\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  padding: 6px 8px;\r\n`;\r\n\r\nconst StyledDescription = styled.p`\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  font-weight: 700;\r\n  font-size: ${({ theme }) => theme.font.size.carouselDescription};\r\n`;\r\n\r\nconst StyledDay = styled.p`\r\n  font-family: ${({ theme }) => theme.font.family.playfair};\r\n  text-transform: capitalize;\r\n  font-size: ${({ theme }) => theme.font.size.jumbotron};\r\n  color: ${({ theme }) => theme.gray};\r\n`;\r\n\r\nconst Carousel = ({ data }) => {\r\n  const [index, setIndex] = useState(0);\r\n  const { node } = data.allFile.edges[index];\r\n\r\n  const carouselData = [\r\n    { day: 'monday', dish: 'home made baguette', price: '$8.95' },\r\n    { day: 'tuesday', dish: 'miso ramen', price: '$12.35' },\r\n    { day: 'wednesday', dish: 'curry duck', price: '$15.75' },\r\n    { day: 'thursday', dish: 'pumpkin spicy pie', price: '$7.75' },\r\n  ];\r\n\r\n  const setCarousel = index => {\r\n    if (index - 1 < 0) {\r\n      setIndex(0);\r\n    }\r\n\r\n    setIndex(index);\r\n  };\r\n  const specificDay = carouselData.find(data => data.day === node.name);\r\n  return (\r\n    <StyledWrapper>\r\n      <Img fluid={node.childImageSharp.fluid} key={node.id} alt={node.name} />\r\n      <StyledPriceTag>{specificDay.price}</StyledPriceTag>\r\n      <StyledButtonsContainer>\r\n        {carouselData.map((day, index) => (\r\n          <StyledButton\r\n            key={day.day}\r\n            style={{\r\n              backgroundColor: node.name === day.day ? 'white' : 'transparent',\r\n            }}\r\n            type=\"button\"\r\n            onClick={() => setCarousel(index)}\r\n          />\r\n        ))}\r\n      </StyledButtonsContainer>\r\n      <StyledDescription>{specificDay.dish}</StyledDescription>\r\n      <StyledDay>{specificDay.day}</StyledDay>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allFile(filter: { absolutePath: { regex: \"/carousel/\" } }) {\r\n          edges {\r\n            node {\r\n              id\r\n              name\r\n              childImageSharp {\r\n                fluid(quality: 90) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Carousel data={data} {...props} />}\r\n  />\r\n);\r\n\r\nCarousel.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Img from 'gatsby-image';\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 600px;\r\n  height: 400px;\r\n  overflow: 'hidden';\r\n  position: relative;\r\n  transition: transform 0.3s ease-in;\r\n\r\n  @media (max-width: 1024px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StyledButtonsContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 100px;\r\n  left: -3%;\r\n  z-index: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: #edeff2;\r\n  margin-top: 8px;\r\n  cursor: pointer;\r\n  border: none;\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  font-weight: 700;\r\n`;\r\n\r\nconst StyledPriceTag = styled.div`\r\n  position: absolute;\r\n  top: 34px;\r\n  right: 20px;\r\n  background-color: ${({ theme }) => theme.lightGray};\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  padding: 6px 8px;\r\n`;\r\n\r\nconst StyledImage = styled(Img)`\r\n  width: 600px;\r\n  height: 400px;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledDescription = styled.p`\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  font-weight: 700;\r\n  font-size: ${({ theme }) => theme.font.size.carouselDescription};\r\n`;\r\n\r\nconst StyledDay = styled.p`\r\n  font-family: ${({ theme }) => theme.font.family.playfair};\r\n  text-transform: capitalize;\r\n  font-size: ${({ theme }) => theme.font.size.jumbotron};\r\n  color: ${({ theme }) => theme.gray};\r\n  margin-left: auto;\r\n`;\r\n\r\nconst DesktopCarousel = ({ data }) => {\r\n  const [index, setIndex] = useState(0);\r\n  const { node } = data.allFile.edges[index];\r\n\r\n  const carouselData = [\r\n    { day: 'monday', dish: 'home made baguette', price: '$8.95' },\r\n    { day: 'tuesday', dish: 'miso ramen', price: '$12.35' },\r\n    { day: 'wednesday', dish: 'curry duck', price: '$15.75' },\r\n    { day: 'thursday', dish: 'pumpkin spicy pie', price: '$7.75' },\r\n  ];\r\n\r\n  const specificDay = carouselData.find(data => data.day === node.name);\r\n\r\n  const length = data.allFile.edges.length - 1;\r\n\r\n  const changeSlide = isPrev => {\r\n    if (isPrev) {\r\n      return index === 0 ? setIndex(length) : setIndex(index - 1);\r\n    } else {\r\n      return index === length ? setIndex(0) : setIndex(index + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledWrapper role=\"list\">\r\n      <StyledButtonsContainer>\r\n        <StyledButton\r\n          onClick={() => changeSlide(true)}\r\n          aria-label=\"previous slide\"\r\n        >\r\n          &lt;\r\n        </StyledButton>\r\n        <StyledButton\r\n          onClick={() => changeSlide(false)}\r\n          aria-label=\"next slide\"\r\n        >\r\n          &gt;\r\n        </StyledButton>\r\n      </StyledButtonsContainer>\r\n      <StyledImage\r\n        fluid={node.childImageSharp.fluid}\r\n        key={node.id}\r\n        alt={node.name}\r\n        aria-label={node.name}\r\n        role=\"listitem\"\r\n      />\r\n      <StyledPriceTag>{specificDay.price}</StyledPriceTag>\r\n      <StyledContainer>\r\n        <StyledDescription>{specificDay.dish}</StyledDescription>\r\n        <StyledDay>{specificDay.day}</StyledDay>\r\n      </StyledContainer>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allFile(filter: { absolutePath: { regex: \"/carousel/\" } }) {\r\n          edges {\r\n            node {\r\n              id\r\n              name\r\n              childImageSharp {\r\n                fluid(quality: 90) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <DesktopCarousel data={data} {...props} />}\r\n  />\r\n);\r\n\r\nDesktopCarousel.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Carousel from '../common/Carousel';\r\nimport DesktopCarousel from '../common/DesktopCarousel';\r\n\r\nimport {\r\n  StyledHeading,\r\n  StyledDescription,\r\n  StyledWrapper,\r\n  StyledColumn,\r\n  StyledColumnCentered,\r\n} from '../common/common';\r\n\r\nconst StyledSection = styled.section`\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.lightGray};\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: 768px) and (max-width: 1280px) {\r\n    height: 44vh;\r\n  }\r\n\r\n  @media (min-width: 1281px) {\r\n    height: 60vh;\r\n  }\r\n`;\r\n\r\nconst StyledCarouselColumn = styled(StyledColumn)`\r\n  @media (min-width: 768px) and (max-width: 1280px) {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  @media (min-width: 1281px) {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n\r\nconst Lunch = () => (\r\n  <StyledSection title=\"Lunch of the day\">\r\n    <StyledWrapper>\r\n      <StyledColumnCentered>\r\n        <StyledHeading>lunch</StyledHeading>\r\n        <StyledDescription>of the day</StyledDescription>\r\n      </StyledColumnCentered>\r\n      <StyledCarouselColumn>\r\n        <Carousel />\r\n        <DesktopCarousel />\r\n      </StyledCarouselColumn>\r\n    </StyledWrapper>\r\n  </StyledSection>\r\n);\r\n\r\nexport default Lunch;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\n\r\nimport PhotoComponent from '../common/PhotoComponent';\r\nimport {\r\n  StyledHeading,\r\n  StyledDescription,\r\n  StyledParagraph,\r\n  StyledSection,\r\n  StyledSectionLink,\r\n  StyledWrapper,\r\n  StyledColumn,\r\n} from '../common/common';\r\n\r\nconst StyledMenuSection = styled(StyledSection)`\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst MenuColumn = styled(StyledColumn)`\r\n  @media (min-width: 1200px) {\r\n    justify-self: end;\r\n  }\r\n`;\r\n\r\nconst StyledSwitched = styled(StyledColumn)`\r\n  @media (min-width: 1500px) {\r\n    transform: translateX(-200px);\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    transform: translateX(-200px);\r\n  }\r\n`;\r\n\r\nconst MenuSection = ({\r\n  data: {\r\n    allFile: { edges },\r\n  },\r\n}) => {\r\n  const [firstPhoto, secondPhoto] = edges;\r\n\r\n  return (\r\n    <StyledMenuSection title=\"menu\" align>\r\n      <StyledWrapper>\r\n        <StyledSwitched right>\r\n          <PhotoComponent\r\n            firstPhoto={secondPhoto.node}\r\n            secondPhoto={firstPhoto.node}\r\n            flipped\r\n          />\r\n        </StyledSwitched>\r\n        <MenuColumn isDescription left>\r\n          <StyledHeading>menu</StyledHeading>\r\n          <StyledDescription>delicious and beautiful</StyledDescription>\r\n          <StyledParagraph>\r\n            In our menu you will find a great variety of delicious food that\r\n            will satisfy the needs and tastes of everyone. We strive to source\r\n            the highest quality ingredients for all of our dishes thereby\r\n            enhancing the quality of services.\r\n          </StyledParagraph>\r\n          <StyledSectionLink to=\"/menu\">...</StyledSectionLink>\r\n        </MenuColumn>\r\n      </StyledWrapper>\r\n    </StyledMenuSection>\r\n  );\r\n};\r\n\r\nMenuSection.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allFile(filter: { absolutePath: { regex: \"/menuSection/\" } }) {\r\n          edges {\r\n            node {\r\n              id\r\n              name\r\n              childImageSharp {\r\n                fluid(quality: 90) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <MenuSection data={data} {...props} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport {\r\n  StyledSection,\r\n  StyledWrapper,\r\n  StyledColumn,\r\n  StyledColumnCentered,\r\n} from '../common/common';\r\n\r\nconst StyledQuote = styled.p`\r\n  letter-spacing: 0.1em;\r\n  font-weight: 700;\r\n  font-size: ${({ theme }) => theme.font.size.jumbotron};\r\n\r\n  @media (min-width: 1200px) {\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nconst StyledAuthor = styled.p`\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n  font-size: ${({ theme }) => theme.font.size.paragraph};\r\n`;\r\n\r\nconst StyledQuoteSection = styled(StyledSection)`\r\n  background-color: ${({ theme }) => theme.lightGray};\r\n  text-align: center;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst StyledImage = styled(Img)`\r\n  transform: translateY(-70px);\r\n\r\n  @media (min-width: 1200px) {\r\n    transform: translateY(-70px) translateX(250px);\r\n    max-width: 50%;\r\n  }\r\n`;\r\n\r\nconst Quote = ({ data }) => (\r\n  <StyledQuoteSection title=\"quote\">\r\n    <StyledWrapper>\r\n      <StyledColumn>\r\n        <StyledImage fluid={data.file.childImageSharp.fluid} />\r\n      </StyledColumn>\r\n      <StyledColumnCentered>\r\n        <StyledQuote>\r\n          &quot;The most romantic and perfect place&quot;\r\n        </StyledQuote>\r\n        <StyledAuthor>John Doe</StyledAuthor>\r\n      </StyledColumnCentered>\r\n    </StyledWrapper>\r\n  </StyledQuoteSection>\r\n);\r\n\r\nQuote.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        file(name: { regex: \"/quote/\" }) {\r\n          childImageSharp {\r\n            fluid(quality: 100) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Quote data={data} {...props} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\n\r\nimport PhotoComponent from '../common/PhotoComponent';\r\nimport {\r\n  StyledHeading,\r\n  StyledDescription,\r\n  StyledParagraph,\r\n  StyledSection,\r\n  StyledSectionLink,\r\n  StyledWrapper,\r\n  StyledColumn,\r\n} from '../common/common';\r\n\r\nconst Reservation = ({\r\n  data: {\r\n    allFile: { edges },\r\n  },\r\n}) => {\r\n  const [firstPhoto, secondPhoto] = edges;\r\n\r\n  return (\r\n    <StyledSection title=\"reservation\">\r\n      <StyledWrapper>\r\n        <StyledColumn>\r\n          <PhotoComponent\r\n            firstPhoto={firstPhoto.node}\r\n            secondPhoto={secondPhoto.node}\r\n            switched\r\n            left\r\n          />\r\n        </StyledColumn>\r\n        <StyledColumn isDescription>\r\n          <StyledHeading>reservation</StyledHeading>\r\n          <StyledDescription>\r\n            book your table at our restaurant now!\r\n          </StyledDescription>\r\n          <StyledParagraph>\r\n            When you finalize a reservation with OpenTable they will send you a\r\n            confirmation email immediately. We will also call you on the date of\r\n            your reservation to confirm your table. \u0003 If you do not receive an\r\n            email, or do not hear from the restaurant, we would recommend\r\n            calling to confirm your table and verify your reservation booking\r\n            (+1 939 777 55 33).\r\n          </StyledParagraph>\r\n          <StyledSectionLink to=\"/reservation\">...</StyledSectionLink>\r\n        </StyledColumn>\r\n      </StyledWrapper>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nReservation.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allFile(filter: { absolutePath: { regex: \"/reservation/\" } }) {\r\n          edges {\r\n            node {\r\n              id\r\n              name\r\n              childImageSharp {\r\n                fluid(quality: 100) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Reservation data={data} {...props} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nimport {\r\n  StyledHeading,\r\n  StyledDescription,\r\n  StyledSection,\r\n  StyledSectionLink,\r\n  StyledThreeColumnGrid,\r\n} from '../common/common';\r\n\r\nconst StyledAdvantage = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.lightGray};\r\n  padding: 30px 20px;\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  text-align: center;\r\n  border-bottom: 1px solid #d9d9d9;\r\n\r\n  @media (min-width: 1200px) {\r\n    height: 280px;\r\n    border-bottom: none;\r\n    border-right: 1px solid #d9d9d9;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 18px;\r\n\r\n    &:last-of-type {\r\n      border-right: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(StyledSectionLink)`\r\n  background-color: #1e2633;\r\n  text-transform: uppercase;\r\n  color: ${({ theme }) => theme.white};\r\n  font-size: ${({ theme }) => theme.font.size.paragraph};\r\n  padding: 10px 20px;\r\n  position: absolute;\r\n  bottom: 6%;\r\n  left: 36%;\r\n  cursor: pointer;\r\n  z-index: 1;\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n\r\n  @media (min-width: 1200px) {\r\n    left: 47%;\r\n    bottom: 9%;\r\n  }\r\n\r\n  @media (min-width: 768px) and (max-width: 1280px) {\r\n    left: 42%;\r\n  }\r\n`;\r\n\r\nconst StyledServices = styled(StyledSection)`\r\n  text-align: center;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledImage = styled(Img)`\r\n  min-height: 100px;\r\n`;\r\n\r\nconst Services = ({ data }) => {\r\n  const servicesList = [\r\n    'Pickup or delivery',\r\n    'Serving with love',\r\n    'Daily lunch specials',\r\n  ];\r\n\r\n  return (\r\n    <StyledServices title=\"services\">\r\n      <StyledHeading>our services</StyledHeading>\r\n      <StyledDescription>advantages of our restaurant</StyledDescription>\r\n      <StyledThreeColumnGrid role=\"list\">\r\n        {servicesList.map(service => (\r\n          <StyledAdvantage key={service} role=\"listitem\">\r\n            {service}\r\n          </StyledAdvantage>\r\n        ))}\r\n      </StyledThreeColumnGrid>\r\n      <StyledImage fluid={data.file.childImageSharp.fluid} />\r\n      <StyledLink to=\"/shop\">order now</StyledLink>\r\n    </StyledServices>\r\n  );\r\n};\r\n\r\nServices.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        file(name: { regex: \"/order/\" }) {\r\n          childImageSharp {\r\n            fluid(quality: 100) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Services data={data} {...props} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nimport {\r\n  StyledHeading,\r\n  StyledDescription,\r\n  StyledSection,\r\n  StyledSectionLink,\r\n  StyledThreeColumnGrid,\r\n} from '../common/common';\r\n\r\nconst StyledBlogSection = styled(StyledSection)`\r\n  position: relative;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst StyledBlogPost = styled.div`\r\n  position: absolute;\r\n  background-color: ${({ theme }) => theme.white};\r\n  transform: translateY(-128%) translateX(12%);\r\n  width: 65%;\r\n  height: 23%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (min-width: 1000px) {\r\n    width: 22%;\r\n    height: 50%;\r\n    transform: translateY(-131%) translateX(8%);\r\n  }\r\n`;\r\n\r\nconst StyledBlogGrid = styled(StyledThreeColumnGrid)`\r\n  grid-gap: 100px;\r\n\r\n  @media (min-width: 1000px) {\r\n    grid-gap: 20px;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled(StyledDescription)`\r\n  color: ${({ theme }) => theme.black};\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst StyledImage = styled(Img)`\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst StyledDate = styled.p`\r\n  color: ${({ theme }) => theme.gray};\r\n  font-weight: 700;\r\n`;\r\n\r\nconst StyledBlogWrapper = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst BlogHome = ({\r\n  data: {\r\n    allFile: { edges },\r\n  },\r\n}) => {\r\n  const blogPosts = [\r\n    { date: '10/03', title: 'grand opening' },\r\n    { date: '07/03', title: 'mini chilli pretzels' },\r\n    { date: '05/06', title: 'summer specials' },\r\n  ];\r\n\r\n  return (\r\n    <StyledBlogSection title=\"blog\">\r\n      <StyledBlogWrapper>\r\n        <StyledHeading>blog</StyledHeading>\r\n        <StyledDescription>news, recipes and much more</StyledDescription>\r\n        <StyledBlogGrid>\r\n          {blogPosts.map((post, index) => (\r\n            <div key={post.date}>\r\n              <StyledImage\r\n                key={post.date}\r\n                fluid={edges[index].node.childImageSharp.fluid}\r\n              />\r\n              <StyledBlogPost>\r\n                <StyledDate>{post.date}</StyledDate>\r\n                <StyledTitle>{post.title}</StyledTitle>\r\n                <StyledSectionLink\r\n                  to={`/blog/${post.title.split(' ').join('')}`}\r\n                >\r\n                  ...\r\n                </StyledSectionLink>\r\n              </StyledBlogPost>\r\n            </div>\r\n          ))}\r\n        </StyledBlogGrid>\r\n      </StyledBlogWrapper>\r\n    </StyledBlogSection>\r\n  );\r\n};\r\n\r\nBlogHome.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allFile(filter: { absolutePath: { regex: \"/blog/\" } }) {\r\n          edges {\r\n            node {\r\n              id\r\n              name\r\n              childImageSharp {\r\n                fluid(quality: 90) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <BlogHome data={data} {...props} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\n\r\nimport PhotoComponent from '../common/PhotoComponent';\r\nimport {\r\n  StyledHeading,\r\n  StyledDescription,\r\n  StyledParagraph,\r\n  StyledSection,\r\n  StyledSectionLink,\r\n  StyledWrapper,\r\n  StyledColumn,\r\n} from '../common/common';\r\n\r\nconst ContactColumn = styled(StyledColumn)`\r\n  @media (min-width: 1200px) {\r\n    justify-self: end;\r\n  }\r\n`;\r\n\r\nconst StyledSwitched = styled(StyledColumn)`\r\n  @media (min-width: 1200px) {\r\n    transform: translateX(-200px);\r\n  }\r\n`;\r\n\r\nconst Contact = ({\r\n  data: {\r\n    allFile: { edges },\r\n  },\r\n}) => {\r\n  const [firstPhoto, secondPhoto] = edges;\r\n\r\n  return (\r\n    <StyledSection title=\"contact\" align>\r\n      <StyledWrapper>\r\n        <StyledSwitched right>\r\n          <PhotoComponent\r\n            firstPhoto={firstPhoto.node}\r\n            secondPhoto={secondPhoto.node}\r\n            flipped\r\n          />\r\n        </StyledSwitched>\r\n        <ContactColumn isDescription left>\r\n          <StyledHeading>contact</StyledHeading>\r\n          <StyledDescription>\r\n            we welcome you in our restaurant\r\n          </StyledDescription>\r\n          <StyledParagraph>\r\n            Please feel free to contact us with any questions or to make\r\n            reservations. If no one is available to take your call, please leave\r\n            a message. We will contact you as soon as possible.\r\n          </StyledParagraph>\r\n          <StyledSectionLink to=\"/contact\">...</StyledSectionLink>\r\n        </ContactColumn>\r\n      </StyledWrapper>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allFile(filter: { absolutePath: { regex: \"/contact/\" } }) {\r\n          edges {\r\n            node {\r\n              id\r\n              name\r\n              childImageSharp {\r\n                fluid(quality: 90) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Contact data={data} {...props} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport HomeTemplate from '../templates/HomeTemplate';\r\nimport SEO from '../components/seo';\r\nimport Header from '../components/common/Header';\r\nimport About from '../components/home/About';\r\nimport LunchOfDay from '../components/home/LunchOfDay';\r\nimport MenuSection from '../components/home/Menu';\r\nimport Quote from '../components/home/Quote';\r\nimport Reservation from '../components/home/Reservation';\r\nimport Services from '../components/home/Services';\r\nimport BlogHome from '../components/home/Blog';\r\nimport Contact from '../components/home/Contact';\r\n\r\nconst IndexPage = ({ data }) => (\r\n  <HomeTemplate>\r\n    <SEO title=\"Home\" keywords={[`renome`, `restaurant`]} />\r\n    <Header photo={data.homeHeader} section=\"made with love\" title=\"for you\" />\r\n    <About />\r\n    <LunchOfDay />\r\n    <MenuSection />\r\n    <Quote />\r\n    <Reservation />\r\n    <Services />\r\n    <BlogHome />\r\n    <Contact />\r\n  </HomeTemplate>\r\n);\r\n\r\nexport const query = graphql`\r\n  query {\r\n    homeHeader: file(relativePath: { eq: \"images/headers/home.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 2000, quality: 100) {\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nIndexPage.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default IndexPage;\r\n"],"sourceRoot":""}