{"version":3,"sources":["webpack:///./src/components/blog/BlogItem.js","webpack:///./src/components/blog/BlogSection.js","webpack:///./src/pages/blog.js","webpack:///./src/templates/HomeTemplate.js","webpack:///./src/components/blog/PopularPosts.js"],"names":["StyledArticle","styled","article","withConfig","displayName","componentId","StyledHeading","h2","StyledBlogDescription","StyledDescription","_ref","theme","gray","StyledLink","Link","_ref2","primary","BlogItem","_ref3","post","photos","text","photo","find","edge","node","name","title","toLowerCase","react_default","a","createElement","key","date","gatsby_image_default","fluid","childImageSharp","alt","common","to","split","join","propTypes","PropTypes","string","isRequired","shape","arrayOf","StyledSectionHeader","StyledAsideWrapper","ul","StyledBlogWrapper","StyledWrapper","StyledBlogSection","StyledSection","StyledAside","aside","StyledCategoryLink","li","isActive","black","font","family","montserrat","BlogSection","props","edges","allFile","blogData","allPosts","_useState","useState","activeCategory","setActive","data","filter","blog","frontmatter","type","category","map","blogPart","id","BlogSection_StyledBlogDescription","blog_BlogItem","excerpt","allCategories","index","indexOf","filterCategories","onClick","chosenCategory","headerHeight","document","querySelector","height","offsetHeight","window","scrollTo","top","behavior","setCategory","PopularPosts","posts","item","isPopular","filterPopularity","blog_BlogSection","gatsby_browser_entry","query","render","BlogSection_BlogSection","Object","assign","_1013181574","__webpack_require__","d","__webpack_exports__","Blog","HomeTemplate","seo","keywords","Header","blogHeader","section","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","redux__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","styled_components__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","_components_common_Snackbar__WEBPACK_IMPORTED_MODULE_6__","_components_common_Footer__WEBPACK_IMPORTED_MODULE_7__","_assets_styles_GlobalStyles__WEBPACK_IMPORTED_MODULE_8__","_assets_styles_theme__WEBPACK_IMPORTED_MODULE_9__","_appLogic_appActions__WEBPACK_IMPORTED_MODULE_10__","children","message","kind","closeMessage","isSnackBarActive","Fragment","oneOfType","func","bool","connect","state","appData","content","dispatch","bindActionCreators","appActions","StyledPost","StyledPostHeading","h3","StyledImage","Img","StyledDate","p","div","react__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-blog-js-50c0919783043c0b9885.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport Img from 'gatsby-image';\r\nimport { StyledDescription, StyledParagraph } from '../common/common';\r\n\r\nconst StyledArticle = styled.article`\r\n  text-align: left;\r\n`;\r\n\r\nconst StyledHeading = styled.h2`\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledBlogDescription = styled(StyledDescription)`\r\n  color: ${({ theme }) => theme.gray};\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: ${({ theme }) => theme.primary};\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  letter-spacing: 0.1em;\r\n`;\r\n\r\nconst BlogItem = ({ post, photos, text }) => {\r\n  const photo =\r\n    photos && photos.find(edge => edge.node.name === post.title.toLowerCase());\r\n\r\n  return (\r\n    <StyledArticle key={post.title}>\r\n      <StyledHeading>{post.title}</StyledHeading>\r\n      <StyledBlogDescription>{post.date}</StyledBlogDescription>\r\n      <Img fluid={photo.node.childImageSharp.fluid} alt=\"\" />\r\n      <StyledParagraph>{text}</StyledParagraph>\r\n      <StyledLink\r\n        to={`/blog/${post.title\r\n          .split(' ')\r\n          .join('')\r\n          .toLowerCase()}`}\r\n      >\r\n        Continue reading...\r\n      </StyledLink>\r\n    </StyledArticle>\r\n  );\r\n};\r\n\r\nBlogItem.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  post: PropTypes.shape().isRequired,\r\n  photos: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n};\r\n\r\nexport default BlogItem;\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { graphql, StaticQuery } from 'gatsby';\nimport BlogItem from './BlogItem';\nimport {\n  StyledDescription,\n  StyledSection,\n  StyledWrapper,\n} from '../common/common';\nimport PopularPosts from './PopularPosts';\n\nconst StyledBlogDescription = styled(StyledDescription)`\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nconst StyledSectionHeader = styled.h2`\n  text-transform: uppercase;\n  font-weight: 600;\n  font-size: 16px;\n`;\n\nconst StyledAsideWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type: none;\n  padding-left: 0;\n`;\n\nconst StyledBlogWrapper = styled(StyledWrapper)`\n  @media (min-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst StyledBlogSection = styled(StyledSection)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media (min-width: 1200px) {\n    flex-direction: row;\n    width: 80%;\n    margin: 0 auto;\n  }\n`;\n\nconst StyledAside = styled.aside`\n  margin: 0 auto;\n  width: 90%;\n\n  @media (min-width: 1200px) {\n    margin-top: 70px;\n    margin-left: 100px;\n    width: 50%;\n  }\n`;\n\nconst StyledCategoryLink = styled.li`\n  border: none;\n  background-color: transparent;\n  flex-basis: 50%;\n  text-align: left;\n  font-weight: 600;\n  padding: 10px 0;\n  color: ${({ isActive, theme }) => (isActive ? theme.primary : theme.black)};\n  cursor: pointer;\n  font-family: ${({ theme }) => theme.font.family.montserrat};\n`;\n\nconst BlogSection = props => {\n  const {\n    photos: {\n      allFile: { edges },\n    },\n    allPosts: { edges: blogData },\n  } = props;\n  const [activeCategory, setActive] = useState('all');\n\n  const data =\n    activeCategory !== 'all'\n      ? blogData\n          .filter(blog => blog.node.frontmatter.type !== 'shop')\n          .filter(data => data.node.frontmatter.category == activeCategory)\n      : blogData.filter(blog => blog.node.frontmatter.type !== 'shop');\n\n  const renderBlog = () => {\n    if (activeCategory !== 'all') {\n      return data.map(blogPart => (\n        <StyledSection\n          title={blogPart.node.frontmatter.category}\n          key={blogPart.node.id}\n        >\n          <StyledBlogDescription>\n            {blogPart.node.frontmatter.category}\n          </StyledBlogDescription>\n          <BlogItem\n            post={blogPart.node.frontmatter}\n            text={blogPart.node.excerpt}\n            key={blogPart.id}\n            photos={edges}\n          />\n        </StyledSection>\n      ));\n    } else {\n      return data.map(blogPart => (\n        <StyledSection\n          title={blogPart.node.frontmatter.category}\n          key={blogPart.node.id}\n        >\n          <StyledBlogDescription>\n            {blogPart.node.frontmatter.category}\n          </StyledBlogDescription>\n          <BlogItem\n            post={blogPart.node.frontmatter}\n            text={blogPart.node.excerpt}\n            key={blogPart.id}\n            photos={edges}\n          />\n        </StyledSection>\n      ));\n    }\n  };\n\n  const setCategory = category => {\n    const chosenCategory = activeCategory === category ? 'all' : category;\n    const headerHeight = document.querySelector('header');\n    const height =\n      document.querySelector('section[title=\"blog\"]').offsetHeight -\n      headerHeight;\n\n    setActive(chosenCategory);\n    window &&\n      window.scrollTo({\n        top: -height,\n        behavior: 'smooth',\n      });\n  };\n\n  const filterPopularity = blogData => {\n    return blogData && blogData.filter(item => item.node.frontmatter.isPopular);\n  };\n\n  const filterCategories = blogData => {\n    const allCategories = blogData\n      .filter(blog => blog.node.frontmatter.type === 'blog')\n      .map(blogPart => blogPart.node.frontmatter.category);\n    const uniqueCategories = allCategories.filter(\n      (category, index) => allCategories.indexOf(category) === index\n    );\n\n    return uniqueCategories;\n  };\n\n  return (\n    <StyledBlogSection title=\"blog\">\n      <StyledBlogWrapper>{renderBlog()}</StyledBlogWrapper>\n      <StyledAside>\n        <section title=\"Category choice\">\n          <StyledSectionHeader>Categories</StyledSectionHeader>\n          <StyledAsideWrapper>\n            {filterCategories(blogData).map(category => (\n              <StyledCategoryLink\n                key={category}\n                onClick={() => setCategory(category)}\n                isActive={activeCategory === category}\n              >\n                {category}\n              </StyledCategoryLink>\n            ))}\n          </StyledAsideWrapper>\n        </section>\n        <section title=\"Popular posts\">\n          <StyledSectionHeader>Popular posts</StyledSectionHeader>\n          <PopularPosts posts={filterPopularity(blogData)} photos={edges} />\n        </section>\n      </StyledAside>\n    </StyledBlogSection>\n  );\n};\n\nBlogSection.propTypes = {\n  photos: PropTypes.shape().isRequired,\n  allPosts: PropTypes.shape().isRequired,\n};\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allFile(filter: { absolutePath: { regex: \"/blogSection/\" } }) {\n          edges {\n            node {\n              id\n              name\n              childImageSharp {\n                fluid(quality: 100) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => <BlogSection photos={data} {...props} />}\n  />\n);\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport HomeTemplate from '../templates/HomeTemplate';\r\nimport SEO from '../components/seo';\r\nimport Header from '../components/common/Header';\r\nimport BlogSection from '../components/blog/BlogSection';\r\n\r\nconst Blog = ({ data }) => (\r\n  <HomeTemplate>\r\n    <SEO title=\"Blog\" keywords={[`renome`, `restaurant`]} />\r\n    <Header\r\n      photo={data.blogHeader}\r\n      section=\"blog\"\r\n      title=\"news, recipes and much more\"\r\n    />\r\n    <BlogSection allPosts={data.allMarkdownRemark} />\r\n  </HomeTemplate>\r\n);\r\n\r\nexport const query = graphql`\r\n  query {\r\n    blogHeader: file(relativePath: { eq: \"images/headers/blog.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 2000, quality: 100) {\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 250)\r\n          id\r\n          frontmatter {\r\n            title\r\n            type\r\n            category\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nBlog.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default Blog;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport SEO from '../components/seo';\r\nimport Snackbar from '../components/common/Snackbar';\r\nimport Footer from '../components/common/Footer';\r\nimport GlobalStyles from '../assets/styles/GlobalStyles';\r\nimport { theme } from '../assets/styles/theme';\r\nimport * as appActions from '../appLogic/appActions';\r\n\r\nconst HomeTemplate = ({\r\n  children,\r\n  message,\r\n  kind,\r\n  closeMessage,\r\n  isSnackBarActive,\r\n}) => (\r\n  <ThemeProvider theme={theme}>\r\n    <>\r\n      <SEO title=\"Home\" keywords={[`renome`, `restaurant`, `food`]} />\r\n      <GlobalStyles />\r\n      <main>{children}</main>\r\n      {isSnackBarActive && (\r\n        <Snackbar\r\n          message={message}\r\n          isActive={isSnackBarActive}\r\n          type={kind}\r\n          closeMessage={closeMessage}\r\n        />\r\n      )}\r\n      <Footer />\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n\r\nHomeTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n  message: PropTypes.string,\r\n  kind: PropTypes.string,\r\n  closeMessage: PropTypes.func,\r\n  isSnackBarActive: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  kind: state.appData.message.kind,\r\n  isSnackBarActive: state.appData.isSnackBarActive,\r\n  message: state.appData.message.content,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      closeMessage: appActions.closeMessage,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomeTemplate);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Img from 'gatsby-image';\r\nimport { Link } from 'gatsby';\r\n\r\nconst StyledPost = styled.article`\r\n  display: flex;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StyledPostHeading = styled.h3`\r\n  margin: 0;\r\n`;\r\n\r\nconst StyledImage = styled(Img)`\r\n  width: 90px;\r\n  height: 56px;\r\n`;\r\n\r\nconst StyledDate = styled.p`\r\n  font-weight: 600;\r\n  color: ${({ theme }) => theme.gray};\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  margin-left: 10px;\r\n  align-self: flex-start;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: ${({ theme }) => theme.black};\r\n  text-decoration: none;\r\n`;\r\n\r\nconst PopularPosts = ({ posts, photos }) => (\r\n  <Fragment>\r\n    {posts.map(post => (\r\n      <StyledPost key={post.node.id}>\r\n        <StyledImage\r\n          fluid={\r\n            photos.find(\r\n              photo =>\r\n                photo.node.name === post.node.frontmatter.title.toLowerCase()\r\n            ).node.childImageSharp.fluid\r\n          }\r\n        />\r\n        <StyledWrapper>\r\n          <StyledPostHeading>\r\n            <StyledLink\r\n              to={`/blog/${post.node.frontmatter.title\r\n                .split(' ')\r\n                .join('')\r\n                .toLowerCase()}`}\r\n            >\r\n              {post.node.frontmatter.title}\r\n            </StyledLink>\r\n          </StyledPostHeading>\r\n          <StyledDate>{post.node.frontmatter.date}</StyledDate>\r\n        </StyledWrapper>\r\n      </StyledPost>\r\n    ))}\r\n  </Fragment>\r\n);\r\n\r\nPopularPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  photos: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n};\r\n\r\nexport default PopularPosts;\r\n"],"sourceRoot":""}