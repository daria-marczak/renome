{"version":3,"sources":["webpack:///./src/components/blog/logic/blogActions.js","webpack:///./src/utils/formatDate.js","webpack:///./src/components/blog/BlogComments.js","webpack:///./src/components/blog/BlogPost.js","webpack:///./src/templates/PostTemplate.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/common/Loader.js","webpack:///./src/components/blog/PopularPosts.js"],"names":["createComment","_ref","comment","type","actions","INVOKE","formatDate","date","toLocaleDateString","StyledCommentSection","styled","ul","_templateObject","theme","lightGray","StyledComment","li","_templateObject2","StyledCommentAuthor","div","_templateObject3","StyledMobileComment","_templateObject4","StyledAuthorParagraph","p","_templateObject5","StyledSectionHeader","h3","_templateObject6","StyledMobileParagraph","_templateObject7","StyledDate","_templateObject8","StyledAvatar","_templateObject9","_ref2","StyledCommentContent","StyledParagraph","_templateObject10","StyledForm","form","_templateObject11","_ref3","StyledFormWrapper","_templateObject12","StyledInput","input","_templateObject13","_ref4","_ref5","font","family","montserrat","_ref6","placeholder","BlogComments","props","_this","_PureComponent","call","this","onChange","event","_this$setState","setState","target","name","value","onSubmit","preventDefault","state","author","email","message","render","_this2","_this$state","_this$props","comments","isFetching","title","length","react_default","a","createElement","map","key","id","content","required","common","disabled","Loader","PureComponent","propTypes","PropTypes","func","isRequired","arrayOf","object","bool","defaultProps","connect","blog","fetching","fetchingComments","dispatch","bindActionCreators","blogActions","StyledBlogDescription","StyledDescription","BlogPost_templateObject","StyledBlogTitle","h2","BlogPost_templateObject2","BlogPost_templateObject3","StyledBlogWrapper","StyledWrapper","BlogPost_templateObject4","StyledBlogSection","StyledSection","BlogPost_templateObject5","StyledAside","aside","BlogPost_templateObject6","StyledTagLink","BlogPost_templateObject7","gray","StyledShareLink","BlogPost_templateObject8","black","BlogPost_templateObject9","StyledAuthor","BlogPost_templateObject10","StyledPostFooter","BlogPost_templateObject11","StyledAuthorDescription","BlogPost_templateObject12","AuthorSection","BlogPost_templateObject13","StyledList","_templateObject14","StyledImage","Img","_templateObject15","BlogPost","blogData","post","postContent","frontmatter","allPosts","photos","data","category","BlogPost_StyledDate","gatsby_image_default","fluid","find","edge","node","toLowerCase","childImageSharp","dangerouslySetInnerHTML","__html","html","tags","tag","href","file","alt","aboutAuthor","blog_BlogComments","BlogPost_StyledSectionHeader","PopularPosts","posts","filter","item","isPopular","shape","blog_BlogPost","gatsby_browser_entry","query","BlogPost_BlogPost","Object","assign","_3128416110","__webpack_require__","d","__webpack_exports__","PostTemplate","isSnackBarActive","kind","closeMessage","_ref$data","markdownRemark","allMarkdownRemark","allFile","blogHeader","styled_components_browser_esm","Fragment","seo","keywords","Header","photo","section","GlobalStyles","edges","Footer","Snackbar","isActive","objectOf","string","appData","appActions","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","StyledLoader","white","primary","react__WEBPACK_IMPORTED_MODULE_1___default","role","aria-live","aria-label","StyledPost","article","StyledPostHeading","StyledLink","Link","react__WEBPACK_IMPORTED_MODULE_4___default","react__WEBPACK_IMPORTED_MODULE_4__","to","split","join"],"mappings":"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","file":"component---src-templates-post-template-js-d960a85067e17b0e7d3b.js","sourcesContent":["import * as actions from './blogConstants';\r\n\r\nexport const createComment = ({ comment }) => ({\r\n  type: actions.CREATE_COMMENT.INVOKE,\r\n  comment,\r\n});\r\n","const formatDate = date => date.toLocaleDateString('en-GB');\r\n\r\nexport default formatDate;\r\n","import React, { PureComponent } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport * as blogActions from './logic/blogActions';\r\nimport formatDate from '../../utils/formatDate';\r\nimport { StyledParagraph, StyledButton } from '../common/common';\r\nimport Loader from '../common/Loader';\r\n\r\nconst StyledCommentSection = styled.ul`\r\n  padding-left: 0;\r\n  border-top: 2px solid ${({ theme }) => theme.lightGray};\r\n`;\r\n\r\nconst StyledComment = styled.li`\r\n  list-style-type: none;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst StyledCommentAuthor = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledMobileComment = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  @media (min-width: 1200px) {\r\n    align-items: initial;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst StyledAuthorParagraph = styled.p`\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n\r\n  @media (min-width: 1200px) {\r\n    display: none;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst StyledSectionHeader = styled.h3`\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst StyledMobileParagraph = styled.p`\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  display: none;\r\n\r\n  @media (min-width: 1200px) {\r\n    display: flex;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst StyledDate = styled.p`\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n\r\n  @media (min-width: 1200px) {\r\n    margin-top: 0;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nconst StyledAvatar = styled.div`\r\n  background: ${({ theme }) => theme.lightGray};\r\n  width: 100px;\r\n  height: 100px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst StyledCommentContent = styled(StyledParagraph)`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  border-top: 2px solid ${({ theme }) => theme.lightGray};\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst StyledFormWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: 1200px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  border: none;\r\n  margin-top: 20px;\r\n  border-bottom: 2px solid ${({ theme }) => theme.lightGray};\r\n  padding: 10px 5px;\r\n  text-transform: uppercase;\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  font-weight: 600;\r\n  width: 100%;\r\n\r\n  @media (min-width: 1200px) {\r\n    margin-left: 10px;\r\n    width: ${({ placeholder }) => (placeholder === 'Message' ? '100%' : '50%')};\r\n  }\r\n  &:first-of-type {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nclass BlogComments extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      author: '',\r\n      email: '',\r\n      message: '',\r\n    };\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    const { createComment } = this.props;\r\n\r\n    event.preventDefault();\r\n    createComment({ comment: this.state });\r\n  };\r\n\r\n  render() {\r\n    const { author, email, message } = this.state;\r\n    const { comments, isFetching } = this.props;\r\n\r\n    const title =\r\n      comments.length !== 1\r\n        ? `${comments.length} comments`\r\n        : `${comments.length} comment`;\r\n\r\n    return (\r\n      <StyledCommentSection>\r\n        <StyledSectionHeader>{title}</StyledSectionHeader>\r\n        {comments.map(comment => (\r\n          <StyledComment key={comment.id}>\r\n            <StyledCommentAuthor>\r\n              <StyledMobileComment>\r\n                <StyledAvatar />\r\n                <StyledMobileParagraph>{comment.author}</StyledMobileParagraph>\r\n                <StyledDate>{formatDate(comment.date)}</StyledDate>\r\n              </StyledMobileComment>\r\n              <StyledAuthorParagraph>{comment.author}</StyledAuthorParagraph>\r\n              <StyledCommentContent>{comment.content}</StyledCommentContent>\r\n            </StyledCommentAuthor>\r\n          </StyledComment>\r\n        ))}\r\n        <StyledForm onSubmit={this.onSubmit}>\r\n          <StyledSectionHeader>Leave a reply</StyledSectionHeader>\r\n          <StyledFormWrapper>\r\n            <StyledInput\r\n              type=\"text\"\r\n              required\r\n              placeholder=\"Name\"\r\n              value={author}\r\n              onChange={event => this.onChange(event)}\r\n              name=\"author\"\r\n            />\r\n            <StyledInput\r\n              type=\"email\"\r\n              required\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={event => this.onChange(event)}\r\n              name=\"email\"\r\n            />\r\n          </StyledFormWrapper>\r\n          <StyledInput\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"Message\"\r\n            value={message}\r\n            onChange={event => this.onChange(event)}\r\n            name=\"message\"\r\n          />\r\n          <StyledButton type=\"submit\" disabled={isFetching}>\r\n            {isFetching && <Loader />}\r\n            {!isFetching && 'Post comment'}\r\n          </StyledButton>\r\n        </StyledForm>\r\n      </StyledCommentSection>\r\n    );\r\n  }\r\n}\r\n\r\nBlogComments.propTypes = {\r\n  createComment: PropTypes.func.isRequired,\r\n  comments: PropTypes.arrayOf(PropTypes.object),\r\n  isFetching: PropTypes.bool,\r\n};\r\n\r\nBlogComments.defaultProps = {\r\n  comments: [],\r\n  isFetching: false,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  comments: state.blog.comments,\r\n  isFetching: state.blog.fetching.fetchingComments,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      createComment: blogActions.createComment,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BlogComments);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Img from 'gatsby-image';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport PopularPosts from './PopularPosts';\r\nimport BlogComments from './BlogComments';\r\nimport {\r\n  StyledSection,\r\n  StyledDescription,\r\n  StyledWrapper,\r\n  StyledParagraph,\r\n} from '../common/common';\r\n\r\nconst StyledBlogDescription = styled(StyledDescription)`\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledBlogTitle = styled.h2`\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledSectionHeader = styled.h3`\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst StyledBlogWrapper = styled(StyledWrapper)`\r\n  @media (min-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    margin-top: 70px;\r\n  }\r\n`;\r\n\r\nconst StyledBlogSection = styled(StyledSection)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 1200px) {\r\n    flex-direction: row;\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst StyledAside = styled.aside`\r\n  margin: 0 auto;\r\n  width: 90%;\r\n\r\n  @media (min-width: 1200px) {\r\n    margin-top: 70px;\r\n    margin-left: 100px;\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst StyledTagLink = styled.li`\r\n  text-transform: uppercase;\r\n  color: ${({ theme }) => theme.gray};\r\n  list-style-type: none;\r\n  font-weight: 600;\r\n  flex: 1;\r\n\r\n  @media (min-width: 1200px) {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst StyledShareLink = styled.a`\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.black};\r\n\r\n  @media (min-width: 1200px) {\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nconst StyledDate = styled.p`\r\n  font-weight: 600;\r\n  color: ${({ theme }) => theme.gray};\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledAuthor = styled.p`\r\n  font-weight: 600;\r\n  margin-top: 0;\r\n\r\n  @media (min-width: 1200px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst StyledPostFooter = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n\r\n  @media (min-width: 1200px) {\r\n    flex-direction: row;\r\n    text-align: left;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledAuthorDescription = styled(StyledParagraph)`\r\n  font-size: 14px;\r\n\r\n  @media (min-width: 1200px) {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst AuthorSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  @media (min-width: 1200px) {\r\n    flex-direction: row;\r\n    text-align: left;\r\n\r\n    & > div {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledList = styled.ul`\r\n  width: 100%;\r\n  padding-left: 0;\r\n  display: flex;\r\n\r\n  @media (min-width: 1200px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst StyledImage = styled(Img)`\r\n  width: 100px;\r\n  height: auto;\r\n\r\n  @media (min-width: 1200px) {\r\n    width: 300px;\r\n    align-self: baseline;\r\n  }\r\n`;\r\n\r\nconst filterPopularity = blogData => {\r\n  return (\r\n    blogData &&\r\n    blogData.filter(\r\n      item =>\r\n        item.node.frontmatter.isPopular && item.node.frontmatter.type === 'blog'\r\n    )\r\n  );\r\n};\r\n\r\nconst BlogPost = ({\r\n  post,\r\n  post: { frontmatter: postContent },\r\n  allPosts,\r\n  photos,\r\n  data,\r\n}) => {\r\n  if (!postContent) {\r\n    return <div />;\r\n  }\r\n\r\n  return (\r\n    <StyledBlogSection title=\"blog\">\r\n      <StyledBlogWrapper>\r\n        <StyledBlogDescription>\r\n          {postContent && postContent.category}\r\n        </StyledBlogDescription>\r\n        <StyledBlogTitle>{postContent && postContent.title}</StyledBlogTitle>\r\n        <StyledDate>{postContent && postContent.date}</StyledDate>\r\n        <Img\r\n          fluid={\r\n            photos.find(\r\n              edge => edge.node.name === postContent.title.toLowerCase()\r\n            ).node.childImageSharp.fluid\r\n          }\r\n        />\r\n        {/* eslint-disable-next-line react/no-danger */}\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        <StyledPostFooter>\r\n          <StyledList>\r\n            {postContent &&\r\n              postContent.tags.map(tag => (\r\n                <StyledTagLink href=\"#\" key={tag}>\r\n                  {tag}\r\n                </StyledTagLink>\r\n              ))}\r\n          </StyledList>\r\n          <StyledShareLink href=\"#\">Share</StyledShareLink>\r\n        </StyledPostFooter>\r\n        <AuthorSection>\r\n          <StyledImage fluid={data.file.childImageSharp.fluid} alt=\"\" />\r\n          <div>\r\n            <StyledAuthor>{postContent && postContent.author}</StyledAuthor>\r\n            <StyledAuthorDescription>\r\n              {postContent && postContent.aboutAuthor}\r\n            </StyledAuthorDescription>\r\n          </div>\r\n        </AuthorSection>\r\n        <BlogComments />\r\n      </StyledBlogWrapper>\r\n      <StyledAside>\r\n        <section title=\"Popular posts\">\r\n          <StyledSectionHeader>Popular posts</StyledSectionHeader>\r\n          <PopularPosts posts={filterPopularity(allPosts)} photos={photos} />\r\n        </section>\r\n      </StyledAside>\r\n    </StyledBlogSection>\r\n  );\r\n};\r\n\r\nBlogPost.propTypes = {\r\n  post: PropTypes.shape().isRequired,\r\n  allPosts: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  data: PropTypes.shape().isRequired,\r\n  photos: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n};\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        file(name: { regex: \"/author/\" }) {\r\n          childImageSharp {\r\n            fluid(quality: 100) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <BlogPost data={data} {...props} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { graphql } from 'gatsby';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport SEO from '../components/seo';\r\nimport GlobalStyles from '../assets/styles/GlobalStyles';\r\nimport { theme } from '../assets/styles/theme';\r\nimport Header from '../components/common/Header';\r\nimport Footer from '../components/common/Footer';\r\nimport BlogPost from '../components/blog/BlogPost';\r\nimport Snackbar from '../components/common/Snackbar';\r\nimport * as appActions from '../appLogic/appActions';\r\n\r\nconst PostTemplate = ({\r\n  isSnackBarActive,\r\n  message,\r\n  kind,\r\n  closeMessage,\r\n  data: { markdownRemark: post, allMarkdownRemark, allFile, blogHeader },\r\n}) => (\r\n  <ThemeProvider theme={theme}>\r\n    <>\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        keywords={[`renome`, `restaurant`, `food`]}\r\n      />\r\n      <Header\r\n        photo={blogHeader}\r\n        section=\"blog\"\r\n        title=\"news, recipes and much more\"\r\n      />\r\n      <GlobalStyles />\r\n      <main>\r\n        <BlogPost\r\n          post={post.frontmatter.type !== 'shop' && post}\r\n          allPosts={allMarkdownRemark.edges.filter(\r\n            edge => edge.node.frontmatter.type !== 'shop'\r\n          )}\r\n          photos={allFile.edges}\r\n        />\r\n      </main>\r\n      <Footer />\r\n      {isSnackBarActive && (\r\n        <Snackbar\r\n          message={message}\r\n          isActive={isSnackBarActive}\r\n          type={kind}\r\n          closeMessage={closeMessage}\r\n        />\r\n      )}\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n\r\nPostTemplate.propTypes = {\r\n  data: PropTypes.objectOf(PropTypes.shape()).isRequired,\r\n  message: PropTypes.string,\r\n  kind: PropTypes.string,\r\n  closeMessage: PropTypes.func,\r\n  isSnackBarActive: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  kind: state.appData.message.kind,\r\n  isSnackBarActive: state.appData.isSnackBarActive,\r\n  message: state.appData.message.content,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      closeMessage: appActions.closeMessage,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        type\r\n        title\r\n        id\r\n        date\r\n        tags\r\n        category\r\n        author\r\n        aboutAuthor\r\n      }\r\n    }\r\n\r\n    blogHeader: file(relativePath: { eq: \"images/headers/blog.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 2000, quality: 100) {\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    }\r\n\r\n    allMarkdownRemark {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 250)\r\n          id\r\n          frontmatter {\r\n            title\r\n            type\r\n            category\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            isPopular\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    allFile(filter: { absolutePath: { regex: \"/blogSection/\" } }) {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          childImageSharp {\r\n            fluid(quality: 100) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostTemplate);\r\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoader = styled.div`\r\n  position: absolute;\r\n  height: 50px;\r\n  width: inherit;\r\n\r\n  &:before {\r\n    animation: rotate 0.9s linear infinite both;\r\n    border: 3px solid ${({ theme }) => theme.white};\r\n    border-bottom-color: ${({ theme }) => theme.primary};\r\n    border-radius: 100%;\r\n    content: '';\r\n    height: 20px;\r\n    top: -20%;\r\n    width: 20px;\r\n    left: 43%;\r\n    position: absolute;\r\n    will-change: transform;\r\n    transform-origin: center;\r\n  }\r\n\r\n  @keyframes rotate {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loader = () => (\r\n  <StyledLoader\r\n    role=\"alert\"\r\n    aria-live=\"assertive\"\r\n    aria-label=\"Content is loading\"\r\n  />\r\n);\r\n\r\nexport default Loader;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Img from 'gatsby-image';\r\nimport { Link } from 'gatsby';\r\n\r\nconst StyledPost = styled.article`\r\n  display: flex;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StyledPostHeading = styled.h3`\r\n  margin: 0;\r\n`;\r\n\r\nconst StyledImage = styled(Img)`\r\n  width: 90px;\r\n  height: 56px;\r\n`;\r\n\r\nconst StyledDate = styled.p`\r\n  font-weight: 600;\r\n  color: ${({ theme }) => theme.gray};\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  margin-left: 10px;\r\n  align-self: flex-start;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: ${({ theme }) => theme.black};\r\n  text-decoration: none;\r\n`;\r\n\r\nconst PopularPosts = ({ posts, photos }) => (\r\n  <Fragment>\r\n    {posts.map(post => (\r\n      <StyledPost key={post.node.id}>\r\n        <StyledImage\r\n          fluid={\r\n            photos.find(\r\n              photo =>\r\n                photo.node.name === post.node.frontmatter.title.toLowerCase()\r\n            ).node.childImageSharp.fluid\r\n          }\r\n        />\r\n        <StyledWrapper>\r\n          <StyledPostHeading>\r\n            <StyledLink\r\n              to={`/blog/${post.node.frontmatter.title\r\n                .split(' ')\r\n                .join('')\r\n                .toLowerCase()}`}\r\n            >\r\n              {post.node.frontmatter.title}\r\n            </StyledLink>\r\n          </StyledPostHeading>\r\n          <StyledDate>{post.node.frontmatter.date}</StyledDate>\r\n        </StyledWrapper>\r\n      </StyledPost>\r\n    ))}\r\n  </Fragment>\r\n);\r\n\r\nPopularPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  photos: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n};\r\n\r\nexport default PopularPosts;\r\n"],"sourceRoot":""}