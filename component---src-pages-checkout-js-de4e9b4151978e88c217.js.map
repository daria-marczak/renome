{"version":3,"sources":["webpack:///./src/components/checkout/logic/checkoutActions.js","webpack:///./src/components/checkout/AddressForm.js","webpack:///./src/components/checkout/Details.js","webpack:///./src/components/checkout/OrderDetails.js","webpack:///./src/components/checkout/PaymentOptions.js","webpack:///./src/components/checkout/CheckoutSection.js","webpack:///./src/pages/checkout.js","webpack:///./src/templates/HomeTemplate.js","webpack:///./src/components/common/Loader.js","webpack:///./src/utils/formatPrice.js"],"names":["checkoutProducts","type","checkoutActions","INVOKE","addOrderDetails","address","kind","changePaymentMethod","paymentMethod","StyledHeading","styled","h2","withConfig","displayName","componentId","StyledFormWrapper","div","StyledForm","form","_ref","theme","font","family","montserrat","StyledOneLine","StyledLabel","label","_ref2","fullWidth","StyledInput","input","_ref3","_ref4","lightGray","AddressForm","props","_this","_Component","call","this","onChange","event","_this$setState","setState","target","name","value","handleSubmit","preventDefault","onSubmit","state","country","firstName","lastName","companyName","addressLine1","addressLine2","city","county","postcode","emailAddress","phone","render","_this2","_this$state","_this$props","shouldShowSubmitButton","isFetching","react_default","a","createElement","htmlFor","aria-label","id","placeholder","required","common","disabled","Loader","Component","propTypes","PropTypes","string","isRequired","bool","func","defaultProps","Wrapper","Label","checked","Input","_ref5","Details","_ref6","createAccount","password","shippingAddress","Details_StyledLabel","Details_StyledInput","StyledWrapper","article","StyledTable","table","StyledTableRow","tr","StyledTableCell","td","StyledHeadTableCell","OrderDetails","products","subTotal","cartItems","shipping","price","reduce","accumulator","currentValue","quantity","find","cartItem","productId","node","frontmatter","calculatePrice","shippingPrice","parseInt","OrderDetails_StyledHeading","map","product","key","title","formatPrice","format","arrayOf","shape","PaymentOptions","PaymentOptions_StyledWrapper","PaymentOptions_StyledForm","PaymentOptions_Label","PaymentOptions_Input","CheckoutSection","data","_this$setState2","filteredCartItems","allProducts","filter","mdProduct","concat","apply","CheckoutSection_StyledWrapper","checkout_OrderDetails","checkout_PaymentOptions","checkout_AddressForm","checkout_Details","connect","cart","checkout","fetching","fetchingForm","dispatch","bindActionCreators","__webpack_require__","d","__webpack_exports__","query","Checkout","HomeTemplate","seo","keywords","Header","photo","menuHeader","section","checkout_CheckoutSection","allMarkdownRemark","edges","Footer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","redux__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","styled_components__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","_components_common_Snackbar__WEBPACK_IMPORTED_MODULE_6__","_assets_styles_GlobalStyles__WEBPACK_IMPORTED_MODULE_7__","_assets_styles_theme__WEBPACK_IMPORTED_MODULE_8__","_appLogic_appActions__WEBPACK_IMPORTED_MODULE_9__","children","message","closeMessage","isSnackBarActive","Fragment","isActive","oneOfType","appData","content","appActions","StyledLoader","white","primary","role","aria-live","Intl","NumberFormat","style","currency","minimumFractionDigits"],"mappings":"0MAEaA,EAAmB,iBAAO,CACrCC,KAAMC,IAAkCC,SAG7BC,EAAkB,SAACC,EAASC,GAAV,MAAoB,CACjDL,KAAMC,IAAkCC,OACxCE,UACAC,SAGWC,EAAsB,SAAAC,GAAa,MAAK,CACnDP,KAAMC,IACNM,oCCRF,IAAMC,EAAgBC,IAAOC,GAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,8DAMbK,EAAoBL,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGJ,CAAH,8BAKjBO,EAAaP,IAAOQ,KAAVN,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,+DAGC,SAAAS,GAAA,OAAAA,EAAGC,MAAkBC,KAAKC,OAAOC,aAI5CC,EAAgBd,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,uFASbe,EAAcf,IAAOgB,MAAVd,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAGJ,CAAH,yIAQJ,SAAAiB,GAAA,OAAAA,EAAGC,UAA6B,OAAS,QAIhDC,EAAcnB,IAAOoB,MAAVlB,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAGJ,CAAH,+EAEA,SAAAqB,GAAA,OAAAA,EAAGX,MAAkBC,KAAKC,OAAOC,YAErB,SAAAS,GAAA,OAAAA,EAAGZ,MAAkBa,YAG5CC,sBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAiBFC,SAAW,SAAAC,GAAS,IAAAC,EAClBN,EAAKO,WAALD,EAAA,IACGD,EAAMG,OAAOC,MAAOJ,EAAMG,OAAOE,MADpCJ,KAnBiBN,EAwBnBW,aAAe,SAAAN,GACbA,EAAMO,iBAENZ,EAAKD,MAAMc,SAASb,EAAKc,MAAOd,EAAKD,MAAMlC,OAxB3CmC,EAAKc,MAAQ,CACXC,QAAS,GACTC,UAAW,GACXC,SAAU,GACVC,YAAa,GACbC,aAAc,GACdC,aAAc,GACdC,KAAM,GACNC,OAAQ,GACRC,SAAU,GACVC,aAAc,GACdC,MAAO,IAdQzB,4GA8BnB0B,OAAA,WAAS,IAAAC,EAAAxB,KAAAyB,EAaHzB,KAAKW,MAXPC,EAFKa,EAELb,QACAO,EAHKM,EAGLN,OACAC,EAJKK,EAILL,SACAC,EALKI,EAKLJ,aACAC,EANKG,EAMLH,MACAJ,EAPKO,EAOLP,KACAL,EARKY,EAQLZ,UACAC,EATKW,EASLX,SACAC,EAVKU,EAULV,YACAC,EAXKS,EAWLT,aACAC,EAZKQ,EAYLR,aAZKS,EAe8C1B,KAAKJ,MAAlDlC,EAfDgE,EAeChE,KAAMiE,EAfPD,EAeOC,uBAAwBC,EAf/BF,EAe+BE,WAEtC,OACEC,EAAAC,EAAAC,cAACvD,EAAD,KACEqD,EAAAC,EAAAC,cAACrD,EAAD,CAAYgC,SAAU,SAAAR,GAAK,OAAIsB,EAAKhB,aAAaN,KAC/C2B,EAAAC,EAAAC,cAAC7D,EAAD,KAAgBR,GAChBmE,EAAAC,EAAAC,cAAC7C,EAAD,CACEG,WAAS,EACT2C,QAAQ,cACRC,aAAW,0BAHb,UAMEJ,EAAAC,EAAAC,cAACzC,EAAD,CACE5B,KAAK,OACLwE,GAAG,cACH5B,KAAK,UACLjB,WAAS,EACT8C,YAAY,sBACZ5B,MAAOK,EACPX,SAAU,SAAAC,GAAK,OAAIsB,EAAKvB,SAASC,IACjCkC,UAAQ,KAGZP,EAAAC,EAAAC,cAAC9C,EAAD,KACE4C,EAAAC,EAAAC,cAAC7C,EAAD,CAAa8C,QAAQ,YAAYC,aAAW,wBAA5C,aAEEJ,EAAAC,EAAAC,cAACzC,EAAD,CACE5B,KAAK,OACLwE,GAAG,YACH5B,KAAK,YACLC,MAAOM,EACPZ,SAAU,SAAAC,GAAK,OAAIsB,EAAKvB,SAASC,IACjCkC,UAAQ,KAGZP,EAAAC,EAAAC,cAAC7C,EAAD,CAAa8C,QAAQ,WAAWC,aAAW,uBAA3C,YAEEJ,EAAAC,EAAAC,cAACzC,EAAD,CACE5B,KAAK,OACLwE,GAAG,WACH5B,KAAK,WACLC,MAAOO,EACPb,SAAU,SAAAC,GAAK,OAAIsB,EAAKvB,SAASC,QAIvC2B,EAAAC,EAAAC,cAAC7C,EAAD,CACEG,WAAS,EACT2C,QAAQ,cACRC,aAAW,0BAHb,eAMEJ,EAAAC,EAAAC,cAACzC,EAAD,CACE5B,KAAK,OACLwE,GAAG,cACH5B,KAAK,cACLjB,WAAS,EACTkB,MAAOQ,EACPd,SAAU,SAAAC,GAAK,OAAIsB,EAAKvB,SAASC,IACjCkC,UAAQ,KAGZP,EAAAC,EAAAC,cAAC7C,EAAD,CACEG,WAAS,EACT2C,QAAQ,UACRC,aAAW,qBAHb,UAMEJ,EAAAC,EAAAC,cAACzC,EAAD,CACE5B,KAAK,OACLwE,GAAG,UACHC,YAAY,cACZ7B,KAAK,eACLjB,WAAS,EACTkB,MAAOS,EACPf,SAAU,SAAAC,GAAK,OAAIsB,EAAKvB,SAASC,IACjCkC,UAAQ,IAEVP,EAAAC,EAAAC,cAACzC,EAAD,CACE5B,KAAK,OACLwE,GAAG,UACH5B,KAAK,eACL6B,YAAY,gCACZ9C,WAAS,EACTkB,MAAOU,EACPhB,SAAU,SAAAC,GAAK,OAAIsB,EAAKvB,SAASC,IACjCkC,UAAQ,KAGZP,EAAAC,EAAAC,cAAC7C,EAAD,CACEG,WAAS,EACT2C,QAAQ,OACRC,aAAW,uBAHb,cAMEJ,EAAAC,EAAAC,cAACzC,EAAD,CACE5B,KAAK,OACLwE,GAAG,OACH5B,KAAK,OACLjB,WAAS,EACTkB,MAAOW,EACPjB,SAAU,SAAAC,GAAK,OAAIsB,EAAKvB,SAASC,IACjCkC,UAAQ,KAGZP,EAAAC,EAAAC,cAAC9C,EAAD,KACE4C,EAAAC,EAAAC,cAAC7C,EAAD,CAAa8C,QAAQ,SAASC,aAAW,yBAAzC,SAEEJ,EAAAC,EAAAC,cAACzC,EAAD,CACE5B,KAAK,OACLwE,GAAG,SACH5B,KAAK,SACLC,MAAOY,EACPlB,SAAU,SAAAC,GAAK,OAAIsB,EAAKvB,SAASC,IACjCkC,UAAQ,KAGZP,EAAAC,EAAAC,cAAC7C,EAAD,CAAa8C,QAAQ,WAAWC,aAAW,sBAA3C,WAEEJ,EAAAC,EAAAC,cAACzC,EAAD,CACE5B,KAAK,OACLwE,GAAG,WACH5B,KAAK,WACLC,MAAOa,EACPnB,SAAU,SAAAC,GAAK,OAAIsB,EAAKvB,SAASC,IACjCkC,UAAQ,MAIdP,EAAAC,EAAAC,cAAC9C,EAAD,KACE4C,EAAAC,EAAAC,cAAC7C,EAAD,CACE8C,QAAQ,eACRC,aAAW,2BAFb,gBAKEJ,EAAAC,EAAAC,cAACzC,EAAD,CACE5B,KAAK,OACLwE,GAAG,eACH5B,KAAK,eACLC,MAAOc,EACPpB,SAAU,SAAAC,GAAK,OAAIsB,EAAKvB,SAASC,IACjCkC,UAAQ,KAGZP,EAAAC,EAAAC,cAAC7C,EAAD,CAAa8C,QAAQ,QAAQC,aAAW,0BAAxC,QAEEJ,EAAAC,EAAAC,cAACzC,EAAD,CACE5B,KAAK,OACLwE,GAAG,QACH5B,KAAK,QACLC,MAAOe,EACPrB,SAAU,SAAAC,GAAK,OAAIsB,EAAKvB,SAASC,IACjCkC,UAAQ,MAIbT,GACCE,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAcC,SAAUV,GACrBA,GAAcC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,OACbX,GAAc,qBA7MJY,aAsN1B7C,EAAY8C,UAAY,CACtB/E,KAAMgF,IAAUC,OAAOC,WACvBjB,uBAAwBe,IAAUG,KAClCjB,WAAYc,IAAUG,KACtBnC,SAAUgC,IAAUI,KAAKF,YAG3BjD,EAAYoD,aAAe,CACzBpB,wBAAwB,GAGXhC,QCjRTqD,EAAU7E,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAGJ,CAAH,iEAOP8E,EAAQ9E,IAAOgB,MAAVd,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAGJ,CAAH,uTAIM,SAAAS,GAAA,OAAAA,EAAGC,MAAkBC,KAAKC,OAAOC,YAS1B,SAAAI,GAAA,OAAAA,EAAGP,MAAkBa,WAUrB,SAAAF,GAAA,OAAAA,EAAG0D,QAAyB,OAAS,gBAIvDC,EAAQhF,IAAOoB,MAAVlB,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAGJ,CAAH,kCAKLe,EAAcf,IAAOgB,MAAVd,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAGJ,CAAH,qGAQXmB,EAAcnB,IAAOoB,MAAVlB,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAGJ,CAAH,+EAEA,SAAAsB,GAAA,OAAAA,EAAGZ,MAAkBC,KAAKC,OAAOC,YAErB,SAAAoE,GAAA,OAAAA,EAAGvE,MAAkBa,YAG5C2D,EAAU,SAAAC,GAA4D,IAAzDC,EAAyDD,EAAzDC,cAAeC,EAA0CF,EAA1CE,SAAUC,EAAgCH,EAAhCG,gBAAiBxD,EAAeqD,EAAfrD,SAC3D,OACE4B,EAAAC,EAAAC,cAACiB,EAAD,KACEnB,EAAAC,EAAAC,cAACkB,EAAD,CAAOjB,QAAQ,UAAUkB,QAASK,GAChC1B,EAAAC,EAAAC,cAACoB,EAAD,CACEzF,KAAK,WACLwE,GAAG,UACH5B,KAAK,gBACLL,SAAU,SAAAC,GAAK,OAAID,EAASC,IAC5BgD,QAASK,IANb,sBAUCA,GACC1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oIAIAF,EAAAC,EAAAC,cAAC2B,EAAD,CAAa1B,QAAQ,YAArB,mBAEEH,EAAAC,EAAAC,cAAC4B,EAAD,CACEjG,KAAK,OACLwE,GAAG,WACH3B,MAAOiD,EACPlD,KAAK,WACLL,SAAU,SAAAC,GAAK,OAAID,EAASC,QAKpC2B,EAAAC,EAAAC,cAACkB,EAAD,CAAOjB,QAAQ,kBAAkBkB,QAASO,GACxC5B,EAAAC,EAAAC,cAACoB,EAAD,CACEzF,KAAK,WACLwE,GAAG,kBACH5B,KAAK,kBACLL,SAAU,SAAAC,GAAK,OAAID,EAASC,IAC5BgD,QAASO,IANb,kCAcNJ,EAAQZ,UAAY,CAClBc,cAAeb,IAAUG,KAAKD,WAC9Ba,gBAAiBf,IAAUG,KAAKD,WAChCY,SAAUd,IAAUC,OACpB1C,SAAUyC,IAAUI,KAAKF,YAG3BS,EAAQN,aAAe,CACrBS,SAAU,IAGGH,0BC7GTO,EAAgBzF,IAAO0F,QAAVxF,WAAA,CAAAC,YAAA,8BAAAC,YAAA,YAAGJ,CAAH,iDAMbD,EAAgBC,IAAOC,GAAVC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,YAAGJ,CAAH,8DAMb2F,EAAc3F,IAAO4F,MAAV1F,WAAA,CAAAC,YAAA,4BAAAC,YAAA,YAAGJ,CAAH,yDACA,SAAAS,GAAA,OAAAA,EAAGC,MAAkBC,KAAKC,OAAOC,aAK5CgF,EAAiB7F,IAAO8F,GAAV5F,WAAA,CAAAC,YAAA,+BAAAC,YAAA,YAAGJ,CAAH,mDACS,SAAAiB,GAAA,OAAAA,EAAGP,MAAkBa,YAI5CwE,EAAkB/F,IAAOgG,GAAV9F,WAAA,CAAAC,YAAA,gCAAAC,YAAA,YAAGJ,CAAH,+CAKfiG,EAAsBjG,IAAOgG,GAAV9F,WAAA,CAAAC,YAAA,oCAAAC,YAAA,YAAGJ,CAAH,8DAmBnBkG,EAAe,SAAA7E,GAA6B,IAA1B8E,EAA0B9E,EAA1B8E,SAChBC,EAde,SAACD,EAAUE,EAAWC,GAC3C,IAAIC,EAAQJ,EAASK,OAAO,SAACC,EAAaC,GACxC,IAAMC,EAAWN,EAAUO,KACzB,SAAAC,GAAQ,OAAIA,EAASC,YAAcJ,EAAaK,KAAKC,YAAYjD,KACjE4C,SACF,OAAQF,EAAeC,EAAaK,KAAKC,YAAYT,MAAQI,GAC5D,GAEH,MAAoB,SAAbL,EAAsBC,EAASA,GAASD,EAM9BW,CAAed,EADgB9E,EAAhBgF,WAE1Ba,EAA0CC,SAASf,GAJP,GAAK,EAAI,GAM3D,OACE1C,EAAAC,EAAAC,cAAC6B,EAAD,KACE/B,EAAAC,EAAAC,cAACwD,EAAD,mBACA1D,EAAAC,EAAAC,cAAC+B,EAAD,KACEjC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACiC,EAAD,KACEnC,EAAAC,EAAAC,cAACqC,EAAD,gBACAvC,EAAAC,EAAAC,cAACqC,EAAD,gBAGJvC,EAAAC,EAAAC,cAAA,aACGuC,EAASkB,IAAI,SAAAC,GAAO,OACnB5D,EAAAC,EAAAC,cAACiC,EAAD,CAAgB0B,IAAKD,EAAQP,KAAKC,YAAYjD,IAC5CL,EAAAC,EAAAC,cAACmC,EAAD,KACGuB,EAAQP,KAAKC,YAAYQ,OAE5B9D,EAAAC,EAAAC,cAACmC,EAAD,KACG0B,IAAYC,OAAOJ,EAAQP,KAAKC,YAAYT,WAInD7C,EAAAC,EAAAC,cAACiC,EAAD,KACEnC,EAAAC,EAAAC,cAACmC,EAAD,iBACArC,EAAAC,EAAAC,cAACmC,EAAD,KAAkB0B,IAAYC,OAAOtB,KAEvC1C,EAAAC,EAAAC,cAACiC,EAAD,KACEnC,EAAAC,EAAAC,cAACmC,EAAD,iBACArC,EAAAC,EAAAC,cAACmC,EAAD,KACG0B,IAAYC,OAAOR,KAGxBxD,EAAAC,EAAAC,cAACiC,EAAD,KACEnC,EAAAC,EAAAC,cAACmC,EAAD,cACArC,EAAAC,EAAAC,cAACmC,EAAD,KACG0B,IAAYC,OAAOtB,EAAWc,SAS7ChB,EAAa5B,UAAY,CACvB6B,SAAU5B,IAAUoD,QAAQpD,IAAUqD,SACtCvB,UAAW9B,IAAUoD,QAAQpD,IAAUqD,UAG1B1B,QCpGTT,EAAgBzF,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAAGJ,CAAH,gEAIF,SAAAS,GAAA,OAAAA,EAAGC,MAAkBC,KAAKC,OAAOC,aAG5CiE,EAAQ9E,IAAOgB,MAAVd,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAGJ,CAAH,sYAIM,SAAAiB,GAAA,OAAAA,EAAGP,MAAkBC,KAAKC,OAAOC,YAY1B,SAAAQ,GAAA,OAAAA,EAAGX,MAAkBa,WAWrB,SAAAD,GAAA,OAAAA,EAAGyD,QAAyB,OAAS,gBAIvDxE,EAAaP,IAAOQ,KAAVN,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAGJ,CAAH,yCAKVgF,EAAQhF,IAAOoB,MAAVlB,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAGJ,CAAH,kCAKL6H,EAAiB,SAAA5C,GAAA,IAAGnF,EAAHmF,EAAGnF,cAAegC,EAAlBmD,EAAkBnD,SAAlB,OACrB4B,EAAAC,EAAAC,cAACkE,EAAD,KACEpE,EAAAC,EAAAC,cAACmE,EAAD,KACErE,EAAAC,EAAAC,cAACoE,EAAD,CAAOjD,QAA2B,iBAAlBjF,GACd4D,EAAAC,EAAAC,cAACqE,EAAD,CACE1I,KAAK,QACL4C,KAAK,gBACLC,MAAM,eACNN,SAAU,SAAAC,GAAK,OAAID,EAASC,IAC5BgD,QAA2B,iBAAlBjF,IANb,wBAUA4D,EAAAC,EAAAC,cAACoE,EAAD,CAAOjD,QAA2B,WAAlBjF,GACd4D,EAAAC,EAAAC,cAACqE,EAAD,CACE1I,KAAK,QACL4C,KAAK,gBACLC,MAAM,SACNN,SAAU,SAAAC,GAAK,OAAID,EAASC,IAC5BgD,QAA2B,WAAlBjF,IANb,kBAUA4D,EAAAC,EAAAC,cAACoE,EAAD,CAAOjD,QAA2B,WAAlBjF,GACd4D,EAAAC,EAAAC,cAACqE,EAAD,CACE1I,KAAK,QACL4C,KAAK,gBACLC,MAAM,SACNN,SAAU,SAAAC,GAAK,OAAID,EAASC,IAC5BgD,QAA2B,WAAlBjF,IANb,aAcN+H,EAAevD,UAAY,CACzBxE,cAAeyE,IAAUC,OAAOC,WAChC3C,SAAUyC,IAAUI,KAAKF,YAGZoD,QCnFf,IAAMpC,EAAgBzF,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGJ,CAAH,iDAMbkI,sBACJ,SAAAA,EAAYzG,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAUFU,SAAW,SAAC4F,EAAM5I,GAChBmC,EAAKD,MAAM/B,gBAAgByI,EAAM5I,IAZhBmC,EAenBI,SAAW,SAAAC,GAAS,IAAAC,EAClBN,EAAKO,WAALD,EAAA,IACGD,EAAMG,OAAOC,MACU,aAAtBJ,EAAMG,OAAO3C,KACTwC,EAAMG,OAAO6C,QACbhD,EAAMG,OAAOE,MAJrBJ,KAhBiBN,EAwBnB7B,oBAAsB,SAAAkC,GAAS,IAAAqG,EAC7B1G,EAAKO,WAALmG,EAAA,IAEKrG,EAAMG,OAAOC,MAAOJ,EAAMG,OAAOE,MAFtCgG,GAIE,WACE1G,EAAKD,MAAM5B,oBAAoB6B,EAAKc,MAAM1C,kBA3B9C4B,EAAKc,MAAQ,CACX4C,eAAe,EACfE,iBAAiB,EACjBD,SAAU,GACVvF,cAAe,gBAPA4B,4GAmCnB0B,OAAA,WAAS,IAAA3C,EAAA4C,EAAAxB,KACDwG,EAAoBxG,KAAKJ,MAAM0E,SAASkB,IAAI,SAAAC,GAAO,OACvDjE,EAAK5B,MAAM6G,YAAYC,OACrB,SAAAC,GAAS,OAAIA,EAAUzB,KAAKC,YAAYjD,KAAOuD,EAAQR,cAGrDT,GAAY5F,EAAA,IAAGgI,OAAHC,MAAAjI,EAAa4H,GAE/B,OACE3E,EAAAC,EAAAC,cAAC+E,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAD,CAAczC,SAAUE,EAAWA,UAAWxE,KAAKJ,MAAM0E,WACzDzC,EAAAC,EAAAC,cAACiF,EAAD,CACE/I,cAAe+B,KAAKW,MAAM1C,cAC1BgC,SAAUD,KAAKhC,sBAEjB6D,EAAAC,EAAAC,cAACkF,EAAD,CACEvJ,KAAK,kBACLgD,SAAUV,KAAKU,SACfkB,WAAY5B,KAAKJ,MAAMgC,WACvBD,wBAAyB3B,KAAKW,MAAM8C,kBAEtC5B,EAAAC,EAAAC,cAACmF,EAAD,CACEjH,SAAUD,KAAKC,SACfsD,cAAevD,KAAKW,MAAM4C,cAC1BE,gBAAiBzD,KAAKW,MAAM8C,gBAC5BD,SAAUxD,KAAKW,MAAM6C,WAEtBxD,KAAKW,MAAM8C,iBACV5B,EAAAC,EAAAC,cAACkF,EAAD,CAAavJ,KAAK,mBAAmBgD,SAAUV,KAAKU,gBAhEhC8B,aAuE9B6D,EAAgB5D,UAAY,CAC1B5E,gBAAiB6E,IAAUI,KAC3B9E,oBAAqB0E,IAAUI,KAC/BlB,WAAYc,IAAUG,KACtByB,SAAU5B,IAAUoD,QAAQpD,IAAUqD,SACtCU,YAAa/D,IAAUoD,QAAQpD,IAAUqD,UAG3C,IAgBeoB,cAhBS,SAAAxG,GAAK,MAAK,CAChC2D,SAAU3D,EAAMyG,KAAK5C,UACrB5C,WAAYjB,EAAM0G,SAASC,SAASC,eAGX,SAAAC,GACzB,OAAOC,YACL,CACEhK,iBAAkBE,EAClBE,gBAAiBF,EACjBK,oBAAqBL,GAEvB6J,IAIWL,CAGbd,YCnHFqB,EAAAC,EAAAC,EAAA,0BAAAC,KASA,IAAMC,EAAW,SAAAlJ,GAAA,IAAG0H,EAAH1H,EAAG0H,KAAH,OACfzE,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KACElG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAKrC,MAAM,WAAWsC,SAAU,0BAChCpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAQC,MAAO7B,EAAK8B,WAAYC,QAAQ,WAAW1C,MAAM,iBACzD9D,EAAAC,EAAAC,cAACuG,EAAD,CAAiB7B,YAAaH,EAAKiC,kBAAkBC,QACrD3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,QAISZ,GAAK,aA0BlBC,EAASrF,UAAY,CACnB6D,KAAM5D,IAAUqD,QAAQnD,YAGXkF,8CChDf,IAAAY,EAAAhB,EAAA,GAAAiB,EAAAjB,EAAAkB,EAAAF,GAAAG,EAAAnB,EAAA,KAAAoB,EAAApB,EAAA,IAAAqB,EAAArB,EAAA,GAAAsB,EAAAtB,EAAAkB,EAAAG,GAAAE,EAAAvB,EAAA,KAAAwB,EAAAxB,EAAA,KAAAyB,EAAAzB,EAAA,KAAA0B,EAAA1B,EAAA,KAAA2B,EAAA3B,EAAA,KAAA4B,EAAA5B,EAAA,IAWMK,EAAe,SAAAnJ,GAAA,IACnB2K,EADmB3K,EACnB2K,SACAC,EAFmB5K,EAEnB4K,QACAzL,EAHmBa,EAGnBb,KACA0L,EAJmB7K,EAInB6K,aACAC,EALmB9K,EAKnB8K,iBALmB,OAOnBf,EAAA7G,EAAAC,cAACkH,EAAA,EAAD,CAAepK,MAAOA,KACpB8J,EAAA7G,EAAAC,cAAA4G,EAAA7G,EAAA6H,SAAA,KACEhB,EAAA7G,EAAAC,cAACmH,EAAA,EAAD,CAAKvD,MAAM,OAAOsC,SAAU,iCAC5BU,EAAA7G,EAAAC,cAACqH,EAAA,EAAD,MACAT,EAAA7G,EAAAC,cAAA,YAAOwH,GACNG,GACCf,EAAA7G,EAAAC,cAACoH,EAAA,EAAD,CACEK,QAASA,EACTI,SAAUF,EACVhM,KAAMK,EACN0L,aAAcA,OAOxB1B,EAAatF,UAAY,CACvB8G,SAAU7G,IAAUmH,UAAU,CAC5BnH,IAAUoD,QAAQpD,IAAUwC,MAC5BxC,IAAUwC,OACTtC,WACH4G,QAAS9G,IAAUC,OACnB5E,KAAM2E,IAAUC,OAChB8G,aAAc/G,IAAUI,KACxB4G,iBAAkBhH,IAAUG,MAkBfsE,gBAfS,SAAAxG,GAAK,MAAK,CAChC5C,KAAM4C,EAAMmJ,QAAQN,QAAQzL,KAC5B2L,iBAAkB/I,EAAMmJ,QAAQJ,iBAChCF,QAAS7I,EAAMmJ,QAAQN,QAAQO,UAGN,SAAAvC,GACzB,OAAOC,YACL,CACEgC,aAAcO,KAEhBxC,IAIWL,CAGbY,qCChEF,IAAAW,EAAAhB,EAAA,GAAAiB,EAAAjB,EAAAkB,EAAAF,GAGMuB,EAHNvC,EAAA,KAGqBvJ,EAAOM,IAAVJ,WAAA,CAAAC,YAAA,uBAAAC,YAAA,YAAGJ,CAAH,uWAOM,SAAAS,GAAA,OAAAA,EAAGC,MAAkBqL,OAClB,SAAA9K,GAAA,OAAAA,EAAGP,MAAkBsL,UA+BjC5H,IARA,kBACboG,EAAA7G,EAAAC,cAACkI,EAAD,CACEG,KAAK,QACLC,YAAU,YACVpI,aAAW,0DCtCf,IAAM2D,EAAc,IAAI0E,KAAKC,aAAa,QAAS,CACjDC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAGV9E","file":"component---src-pages-checkout-js-de4e9b4151978e88c217.js","sourcesContent":["import * as checkoutActions from './checkoutConstants';\r\n\r\nexport const checkoutProducts = () => ({\r\n  type: checkoutActions.CHECKOUT_PRODUCTS.INVOKE,\r\n});\r\n\r\nexport const addOrderDetails = (address, kind) => ({\r\n  type: checkoutActions.ADD_ORDER_DETAILS.INVOKE,\r\n  address,\r\n  kind,\r\n});\r\n\r\nexport const changePaymentMethod = paymentMethod => ({\r\n  type: checkoutActions.CHANGE_PAYMENT_METHOD,\r\n  paymentMethod,\r\n});\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { StyledButton } from '../common/common';\r\nimport Loader from '../common/Loader';\r\n\r\nconst StyledHeading = styled.h2`\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst StyledFormWrapper = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  flex: 1;\r\n`;\r\n\r\nconst StyledOneLine = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: 1200px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 0 30px 5px;\r\n  text-transform: uppercase;\r\n  font-size: 14px;\r\n\r\n  @media (min-width: 1200px) {\r\n    width: ${({ fullWidth }) => (fullWidth ? '100%' : '50%')};\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  border: none;\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  padding: 15px 10px;\r\n  border-bottom: 3px solid ${({ theme }) => theme.lightGray};\r\n`;\r\n\r\nclass AddressForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      country: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      companyName: '',\r\n      addressLine1: '',\r\n      addressLine2: '',\r\n      city: '',\r\n      county: '',\r\n      postcode: '',\r\n      emailAddress: '',\r\n      phone: '',\r\n    };\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state, this.props.type);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      country,\r\n      county,\r\n      postcode,\r\n      emailAddress,\r\n      phone,\r\n      city,\r\n      firstName,\r\n      lastName,\r\n      companyName,\r\n      addressLine1,\r\n      addressLine2,\r\n    } = this.state;\r\n\r\n    const { type, shouldShowSubmitButton, isFetching } = this.props;\r\n\r\n    return (\r\n      <StyledFormWrapper>\r\n        <StyledForm onSubmit={event => this.handleSubmit(event)}>\r\n          <StyledHeading>{type}</StyledHeading>\r\n          <StyledLabel\r\n            fullWidth\r\n            htmlFor=\"countryName\"\r\n            aria-label=\"Type your country name\"\r\n          >\r\n            Country\r\n            <StyledInput\r\n              type=\"text\"\r\n              id=\"countryName\"\r\n              name=\"country\"\r\n              fullWidth\r\n              placeholder=\"United Kingdom (UK)\"\r\n              value={country}\r\n              onChange={event => this.onChange(event)}\r\n              required\r\n            />\r\n          </StyledLabel>\r\n          <StyledOneLine>\r\n            <StyledLabel htmlFor=\"firstName\" aria-label=\"Type your first name\">\r\n              First name\r\n              <StyledInput\r\n                type=\"text\"\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                value={firstName}\r\n                onChange={event => this.onChange(event)}\r\n                required\r\n              />\r\n            </StyledLabel>\r\n            <StyledLabel htmlFor=\"lastName\" aria-label=\"Type your last name\">\r\n              Last name\r\n              <StyledInput\r\n                type=\"text\"\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                value={lastName}\r\n                onChange={event => this.onChange(event)}\r\n              />\r\n            </StyledLabel>\r\n          </StyledOneLine>\r\n          <StyledLabel\r\n            fullWidth\r\n            htmlFor=\"companyName\"\r\n            aria-label=\"Type your company name\"\r\n          >\r\n            Company name\r\n            <StyledInput\r\n              type=\"text\"\r\n              id=\"companyName\"\r\n              name=\"companyName\"\r\n              fullWidth\r\n              value={companyName}\r\n              onChange={event => this.onChange(event)}\r\n              required\r\n            />\r\n          </StyledLabel>\r\n          <StyledLabel\r\n            fullWidth\r\n            htmlFor=\"address\"\r\n            aria-label=\"Type your address\"\r\n          >\r\n            Address\r\n            <StyledInput\r\n              type=\"text\"\r\n              id=\"address\"\r\n              placeholder=\"Street name\"\r\n              name=\"addressLine1\"\r\n              fullWidth\r\n              value={addressLine1}\r\n              onChange={event => this.onChange(event)}\r\n              required\r\n            />\r\n            <StyledInput\r\n              type=\"text\"\r\n              id=\"address\"\r\n              name=\"addressLine2\"\r\n              placeholder=\"Apartment, suite, unite, etc.\"\r\n              fullWidth\r\n              value={addressLine2}\r\n              onChange={event => this.onChange(event)}\r\n              required\r\n            />\r\n          </StyledLabel>\r\n          <StyledLabel\r\n            fullWidth\r\n            htmlFor=\"city\"\r\n            aria-label=\"Type your city name\"\r\n          >\r\n            Town / city\r\n            <StyledInput\r\n              type=\"text\"\r\n              id=\"city\"\r\n              name=\"city\"\r\n              fullWidth\r\n              value={city}\r\n              onChange={event => this.onChange(event)}\r\n              required\r\n            />\r\n          </StyledLabel>\r\n          <StyledOneLine>\r\n            <StyledLabel htmlFor=\"county\" aria-label=\"Type your county name\">\r\n              County\r\n              <StyledInput\r\n                type=\"text\"\r\n                id=\"county\"\r\n                name=\"county\"\r\n                value={county}\r\n                onChange={event => this.onChange(event)}\r\n                required\r\n              />\r\n            </StyledLabel>\r\n            <StyledLabel htmlFor=\"postcode\" aria-label=\"Type your postcode\">\r\n              Postcode\r\n              <StyledInput\r\n                type=\"text\"\r\n                id=\"postcode\"\r\n                name=\"postcode\"\r\n                value={postcode}\r\n                onChange={event => this.onChange(event)}\r\n                required\r\n              />\r\n            </StyledLabel>\r\n          </StyledOneLine>\r\n          <StyledOneLine>\r\n            <StyledLabel\r\n              htmlFor=\"emailAddress\"\r\n              aria-label=\"Type your email address\"\r\n            >\r\n              Email address\r\n              <StyledInput\r\n                type=\"text\"\r\n                id=\"emailAddress\"\r\n                name=\"emailAddress\"\r\n                value={emailAddress}\r\n                onChange={event => this.onChange(event)}\r\n                required\r\n              />\r\n            </StyledLabel>\r\n            <StyledLabel htmlFor=\"phone\" aria-label=\"Type your phone number\">\r\n              Phone\r\n              <StyledInput\r\n                type=\"text\"\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                value={phone}\r\n                onChange={event => this.onChange(event)}\r\n                required\r\n              />\r\n            </StyledLabel>\r\n          </StyledOneLine>\r\n          {shouldShowSubmitButton && (\r\n            <StyledButton disabled={isFetching}>\r\n              {isFetching && <Loader />}\r\n              {!isFetching && 'Place order'}\r\n            </StyledButton>\r\n          )}\r\n        </StyledForm>\r\n      </StyledFormWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nAddressForm.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  shouldShowSubmitButton: PropTypes.bool,\r\n  isFetching: PropTypes.bool,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nAddressForm.defaultProps = {\r\n  shouldShowSubmitButton: true,\r\n};\r\n\r\nexport default AddressForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: relative;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n\r\n  &:before {\r\n    content: '';\r\n    margin-right: 10px;\r\n    display: inline-block;\r\n    vertical-align: text-top;\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: ${({ theme }) => theme.lightGray};\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: calc(100% / 4);\r\n    left: 5px;\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: ${({ checked }) => (checked ? '#333' : 'transparent')};\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  opacity: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 0 30px 5px;\r\n  text-transform: uppercase;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  border: none;\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  padding: 15px 10px;\r\n  border-bottom: 3px solid ${({ theme }) => theme.lightGray};\r\n`;\r\n\r\nconst Details = ({ createAccount, password, shippingAddress, onChange }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor=\"account\" checked={createAccount}>\r\n        <Input\r\n          type=\"checkbox\"\r\n          id=\"account\"\r\n          name=\"createAccount\"\r\n          onChange={event => onChange(event)}\r\n          checked={createAccount}\r\n        />\r\n        Create an account?\r\n      </Label>\r\n      {createAccount && (\r\n        <div>\r\n          <p>\r\n            Create an account by entering the information below. If you are\r\n            returning customer, please login at the top of the page\r\n          </p>\r\n          <StyledLabel htmlFor=\"password\">\r\n            Account password\r\n            <StyledInput\r\n              type=\"text\"\r\n              id=\"password\"\r\n              value={password}\r\n              name=\"password\"\r\n              onChange={event => onChange(event)}\r\n            />\r\n          </StyledLabel>\r\n        </div>\r\n      )}\r\n      <Label htmlFor=\"shippingAddress\" checked={shippingAddress}>\r\n        <Input\r\n          type=\"checkbox\"\r\n          id=\"shippingAddress\"\r\n          name=\"shippingAddress\"\r\n          onChange={event => onChange(event)}\r\n          checked={shippingAddress}\r\n        />\r\n        Ship to a different address?\r\n      </Label>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nDetails.propTypes = {\r\n  createAccount: PropTypes.bool.isRequired,\r\n  shippingAddress: PropTypes.bool.isRequired,\r\n  password: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nDetails.defaultProps = {\r\n  password: '',\r\n};\r\n\r\nexport default Details;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport formatPrice from '../../utils/formatPrice';\r\n\r\nconst StyledWrapper = styled.article`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst StyledHeading = styled.h2`\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledTableRow = styled.tr`\r\n  border-bottom: 1px solid ${({ theme }) => theme.lightGray};\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst StyledTableCell = styled.td`\r\n  padding: 15px 0;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst StyledHeadTableCell = styled.td`\r\n  padding: 15px 0;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst calculatePrice = (products, cartItems, shipping) => {\r\n  let price = products.reduce((accumulator, currentValue) => {\r\n    const quantity = cartItems.find(\r\n      cartItem => cartItem.productId === currentValue.node.frontmatter.id\r\n    ).quantity;\r\n    return (accumulator += currentValue.node.frontmatter.price * quantity);\r\n  }, 0);\r\n\r\n  return shipping !== 'FREE' ? price : (price += shipping);\r\n};\r\n\r\nconst verifyIfShippingCanBeFree = price => (price > 30 ? 0 : 10);\r\n\r\nconst OrderDetails = ({ products, cartItems }) => {\r\n  const subTotal = calculatePrice(products, cartItems);\r\n  const shippingPrice = verifyIfShippingCanBeFree(parseInt(subTotal));\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <StyledHeading>Your order</StyledHeading>\r\n      <StyledTable>\r\n        <thead>\r\n          <StyledTableRow>\r\n            <StyledHeadTableCell>Product</StyledHeadTableCell>\r\n            <StyledHeadTableCell>Price</StyledHeadTableCell>\r\n          </StyledTableRow>\r\n        </thead>\r\n        <tbody>\r\n          {products.map(product => (\r\n            <StyledTableRow key={product.node.frontmatter.id}>\r\n              <StyledTableCell>\r\n                {product.node.frontmatter.title}\r\n              </StyledTableCell>\r\n              <StyledTableCell>\r\n                {formatPrice.format(product.node.frontmatter.price)}\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n          <StyledTableRow>\r\n            <StyledTableCell>Subtotal</StyledTableCell>\r\n            <StyledTableCell>{formatPrice.format(subTotal)}</StyledTableCell>\r\n          </StyledTableRow>\r\n          <StyledTableRow>\r\n            <StyledTableCell>Shipping</StyledTableCell>\r\n            <StyledTableCell>\r\n              {formatPrice.format(shippingPrice)}\r\n            </StyledTableCell>\r\n          </StyledTableRow>\r\n          <StyledTableRow>\r\n            <StyledTableCell>Total</StyledTableCell>\r\n            <StyledTableCell>\r\n              {formatPrice.format(subTotal + shippingPrice)}\r\n            </StyledTableCell>\r\n          </StyledTableRow>\r\n        </tbody>\r\n      </StyledTable>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nOrderDetails.propTypes = {\r\n  products: PropTypes.arrayOf(PropTypes.shape()),\r\n  cartItems: PropTypes.arrayOf(PropTypes.shape()),\r\n};\r\n\r\nexport default OrderDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  margin-bottom: 40px;\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: relative;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n  font-family: ${({ theme }) => theme.font.family.montserrat};\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n\r\n  &:before {\r\n    content: '';\r\n    border-radius: 100%;\r\n    margin-right: 10px;\r\n    display: inline-block;\r\n    vertical-align: text-top;\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: ${({ theme }) => theme.lightGray};\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: calc(100% / 4);\r\n    left: 5px;\r\n    border-radius: 100%;\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: ${({ checked }) => (checked ? '#333' : 'transparent')};\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  opacity: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst PaymentOptions = ({ paymentMethod, onChange }) => (\r\n  <StyledWrapper>\r\n    <StyledForm>\r\n      <Label checked={paymentMethod === 'bankTransfer'}>\r\n        <Input\r\n          type=\"radio\"\r\n          name=\"paymentMethod\"\r\n          value=\"bankTransfer\"\r\n          onChange={event => onChange(event)}\r\n          checked={paymentMethod === 'bankTransfer'}\r\n        />\r\n        Direct bank transfer\r\n      </Label>\r\n      <Label checked={paymentMethod === 'cheque'}>\r\n        <Input\r\n          type=\"radio\"\r\n          name=\"paymentMethod\"\r\n          value=\"cheque\"\r\n          onChange={event => onChange(event)}\r\n          checked={paymentMethod === 'cheque'}\r\n        />\r\n        Cheque payment\r\n      </Label>\r\n      <Label checked={paymentMethod === 'paypal'}>\r\n        <Input\r\n          type=\"radio\"\r\n          name=\"paymentMethod\"\r\n          value=\"paypal\"\r\n          onChange={event => onChange(event)}\r\n          checked={paymentMethod === 'paypal'}\r\n        />\r\n        Paypal\r\n      </Label>\r\n    </StyledForm>\r\n  </StyledWrapper>\r\n);\r\n\r\nPaymentOptions.propTypes = {\r\n  paymentMethod: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PaymentOptions;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport styled from 'styled-components';\nimport * as checkoutActions from './logic/checkoutActions';\nimport AddressForm from './AddressForm';\nimport Details from './Details';\nimport OrderDetails from './OrderDetails';\nimport PaymentOptions from './PaymentOptions';\n\nconst StyledWrapper = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  margin-bottom: 40px;\n`;\n\nclass CheckoutSection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      createAccount: false,\n      shippingAddress: false,\n      password: '',\n      paymentMethod: 'bankTransfer',\n    };\n  }\n\n  onSubmit = (data, type) => {\n    this.props.addOrderDetails(data, type);\n  };\n\n  onChange = event => {\n    this.setState({\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value,\n    });\n  };\n\n  changePaymentMethod = event => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      },\n      () => {\n        this.props.changePaymentMethod(this.state.paymentMethod);\n      }\n    );\n  };\n\n  render() {\n    const filteredCartItems = this.props.products.map(product =>\n      this.props.allProducts.filter(\n        mdProduct => mdProduct.node.frontmatter.id === product.productId\n      )\n    );\n    const cartItems = [].concat(...filteredCartItems);\n\n    return (\n      <StyledWrapper>\n        <OrderDetails products={cartItems} cartItems={this.props.products} />\n        <PaymentOptions\n          paymentMethod={this.state.paymentMethod}\n          onChange={this.changePaymentMethod}\n        />\n        <AddressForm\n          type=\"Billing address\"\n          onSubmit={this.onSubmit}\n          isFetching={this.props.isFetching}\n          shouldShowSubmitButton={!this.state.shippingAddress}\n        />\n        <Details\n          onChange={this.onChange}\n          createAccount={this.state.createAccount}\n          shippingAddress={this.state.shippingAddress}\n          password={this.state.password}\n        />\n        {this.state.shippingAddress && (\n          <AddressForm type=\"Shipping address\" onSubmit={this.onSubmit} />\n        )}\n      </StyledWrapper>\n    );\n  }\n}\n\nCheckoutSection.propTypes = {\n  addOrderDetails: PropTypes.func,\n  changePaymentMethod: PropTypes.func,\n  isFetching: PropTypes.bool,\n  products: PropTypes.arrayOf(PropTypes.shape()),\n  allProducts: PropTypes.arrayOf(PropTypes.shape()),\n};\n\nconst mapStateToProps = state => ({\n  products: state.cart.cartItems,\n  isFetching: state.checkout.fetching.fetchingForm,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      checkoutProducts: checkoutActions.checkoutProducts,\n      addOrderDetails: checkoutActions.addOrderDetails,\n      changePaymentMethod: checkoutActions.changePaymentMethod,\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CheckoutSection);\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport HomeTemplate from '../templates/HomeTemplate';\r\nimport SEO from '../components/seo';\r\nimport Header from '../components/common/Header';\r\nimport CheckoutSection from '../components/checkout/CheckoutSection';\r\nimport Footer from '../components/common/Footer';\r\n\r\nconst Checkout = ({ data }) => (\r\n  <HomeTemplate>\r\n    <SEO title=\"Checkout\" keywords={[`renome`, `restaurant`]} />\r\n    <Header photo={data.menuHeader} section=\"checkout\" title=\"our products\" />\r\n    <CheckoutSection allProducts={data.allMarkdownRemark.edges} />\r\n    <Footer />\r\n  </HomeTemplate>\r\n);\r\n\r\nexport const query = graphql`\r\n  query {\r\n    menuHeader: file(relativePath: { eq: \"images/headers/shop.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 2000, quality: 100) {\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    }\r\n\r\n    allMarkdownRemark {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            category\r\n            type\r\n            id\r\n            price\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nCheckout.propTypes = {\r\n  data: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default Checkout;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport SEO from '../components/seo';\r\nimport Snackbar from '../components/common/Snackbar';\r\nimport GlobalStyles from '../assets/styles/GlobalStyles';\r\nimport { theme } from '../assets/styles/theme';\r\nimport * as appActions from '../appLogic/appActions';\r\n\r\nconst HomeTemplate = ({\r\n  children,\r\n  message,\r\n  kind,\r\n  closeMessage,\r\n  isSnackBarActive,\r\n}) => (\r\n  <ThemeProvider theme={theme}>\r\n    <>\r\n      <SEO title=\"Home\" keywords={[`renome`, `restaurant`, `food`]} />\r\n      <GlobalStyles />\r\n      <main>{children}</main>\r\n      {isSnackBarActive && (\r\n        <Snackbar\r\n          message={message}\r\n          isActive={isSnackBarActive}\r\n          type={kind}\r\n          closeMessage={closeMessage}\r\n        />\r\n      )}\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n\r\nHomeTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n  message: PropTypes.string,\r\n  kind: PropTypes.string,\r\n  closeMessage: PropTypes.func,\r\n  isSnackBarActive: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  kind: state.appData.message.kind,\r\n  isSnackBarActive: state.appData.isSnackBarActive,\r\n  message: state.appData.message.content,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      closeMessage: appActions.closeMessage,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomeTemplate);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoader = styled.div`\r\n  position: absolute;\r\n  height: 50px;\r\n  width: inherit;\r\n\r\n  &:before {\r\n    animation: rotate 0.9s linear infinite both;\r\n    border: 3px solid ${({ theme }) => theme.white};\r\n    border-bottom-color: ${({ theme }) => theme.primary};\r\n    border-radius: 100%;\r\n    content: '';\r\n    height: 20px;\r\n    top: -20%;\r\n    width: 20px;\r\n    left: 43%;\r\n    position: absolute;\r\n    will-change: transform;\r\n    transform-origin: center;\r\n  }\r\n\r\n  @keyframes rotate {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loader = () => (\r\n  <StyledLoader\r\n    role=\"alert\"\r\n    aria-live=\"assertive\"\r\n    aria-label=\"Content is loading\"\r\n  />\r\n);\r\n\r\nexport default Loader;\r\n","const formatPrice = new Intl.NumberFormat('en-US', {\r\n  style: 'currency',\r\n  currency: 'USD',\r\n  minimumFractionDigits: 2,\r\n});\r\n\r\nexport default formatPrice;\r\n"],"sourceRoot":""}